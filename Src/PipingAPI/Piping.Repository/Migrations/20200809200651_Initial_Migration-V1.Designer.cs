// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Piping.Repository;

namespace Piping.Repository.Migrations
{
    [DbContext(typeof(PipingContext))]
    [Migration("20200809200651_Initial_Migration-V1")]
    partial class Initial_MigrationV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Piping.Entities.Action", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("ActionCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("ActionName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Action");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "N",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2237),
                            Name = "Not visible"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "V",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2341),
                            Name = "View only"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "U",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2344),
                            Name = "Update"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2347),
                            Name = "Add"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2349),
                            Name = "Complete access"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "P",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(2352),
                            Name = "Print"
                        });
                });

            modelBuilder.Entity("Piping.Entities.AlertMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AlertMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailBcc")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailCc")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailContent")
                        .HasColumnType("text");

                    b.Property<string>("EmailFrom")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailSubject")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailTo")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("AlertMaster");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "UC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 744, DateTimeKind.Local).AddTicks(9119),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  User <b>[{{Username}}] </b> is created  </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - User Account Created",
                            EmailTo = "{{UserEmail}}",
                            Name = "User Creation"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "RP",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 744, DateTimeKind.Local).AddTicks(9326),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  Password is reset to  <b>{{UserPassword}} </b>  </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - {{Username}} - Reset Password",
                            EmailTo = "{{UserEmail}}",
                            Name = "Reset Password"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "CP",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 744, DateTimeKind.Local).AddTicks(9332),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  Password is changed successfully. </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - {{Username}} - Change Password",
                            EmailTo = "{{UserEmail}}",
                            Name = "Change Password"
                        });
                });

            modelBuilder.Entity("Piping.Entities.COFMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COFMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DetectionRating")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Flammable")
                        .HasColumnName("Flammable")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FluidPhaseStored")
                        .HasColumnType("text");

                    b.Property<string>("IsolationRating")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("MitigationFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Other")
                        .HasColumnName("Other")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Overall")
                        .HasColumnName("Overall")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Production")
                        .HasColumnName("Production")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RefresentativeFluid")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Toxic")
                        .HasColumnName("Toxic")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("ToxicFluidFraction")
                        .HasColumnType("numeric");

                    b.Property<string>("ToxicReferenceFluid")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("COFMaster");
                });

            modelBuilder.Entity("Piping.Entities.COP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_COP_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("A")
                        .HasColumnName("A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("B")
                        .HasColumnName("B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("C")
                        .HasColumnName("C")
                        .HasColumnType("numeric");

                    b.Property<int>("COP_LEVEL")
                        .HasColumnName("COP_LEVEL")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("D")
                        .HasColumnName("D")
                        .HasColumnType("numeric");

                    b.Property<decimal>("E")
                        .HasColumnName("E")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("TBL_COP");
                });

            modelBuilder.Entity("Piping.Entities.CUICorrosionRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_CUICorrosionRate_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CorrosionRate")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_CUICorrosionRate");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2423),
                            Driver = "M",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2534),
                            Driver = "T",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2539),
                            Driver = "D",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2542),
                            Driver = "S",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2545),
                            Driver = "M",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2548),
                            Driver = "T",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2551),
                            Driver = "D",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2553),
                            Driver = "S",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2557),
                            Driver = "M",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2560),
                            Driver = "T",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2562),
                            Driver = "D",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2564),
                            Driver = "S",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2567),
                            Driver = "M",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2570),
                            Driver = "T",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2572),
                            Driver = "D",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2575),
                            Driver = "S",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2578),
                            Driver = "M",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2581),
                            Driver = "T",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2584),
                            Driver = "D",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CorrosionRate = 0.508m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2586),
                            Driver = "S",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2589),
                            Driver = "M",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2593),
                            Driver = "T",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2595),
                            Driver = "D",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2597),
                            Driver = "S",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2600),
                            Driver = "M",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2602),
                            Driver = "T",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2605),
                            Driver = "D",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2608),
                            Driver = "S",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2611),
                            Driver = "M",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2613),
                            Driver = "T",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2616),
                            Driver = "D",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2619),
                            Driver = "S",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2622),
                            Driver = "M",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2624),
                            Driver = "T",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2627),
                            Driver = "D",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 36,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(2630),
                            Driver = "S",
                            OperatingTemperatureInDegC = 176m
                        });
                });

            modelBuilder.Entity("Piping.Entities.CUISuceptability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_CUISuceptability_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC_From")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OperatingTemperatureInDegC_To")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_From")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_To")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_CUISuceptability");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3486),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3599),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3604),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3609),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3612),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3617),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3620),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3623),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3626),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3628),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3632),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3635),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3638),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3641),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3646),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(3649),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("CompanyCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("LogoContent")
                        .HasColumnName("LogoContent")
                        .HasColumnType("bytea");

                    b.Property<string>("LogoName")
                        .HasColumnName("LogoName")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("CompanyName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Website")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Address = "",
                            Code = "OGC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(9326),
                            Email = "",
                            LogoName = "Logo.png",
                            Name = "OIL & GAS",
                            Phone = "",
                            Website = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.CorrosionStudy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("FluidName")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<string>("ProcessDescription")
                        .HasColumnType("text");

                    b.Property<string>("SubFluidCode")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CorrosionStudy");
                });

            modelBuilder.Entity("Piping.Entities.DMGuide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DMGuideID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("DMDescription")
                        .HasColumnType("text");

                    b.Property<string>("DMGuideDocument")
                        .HasColumnType("text");

                    b.Property<string>("DMRate")
                        .HasColumnType("text");

                    b.Property<string>("DMSeverity")
                        .HasColumnType("text");

                    b.Property<string>("DMSuceptability")
                        .HasColumnType("text");

                    b.Property<string>("DMType")
                        .HasColumnType("text");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("FluidName")
                        .HasColumnType("text");

                    b.Property<string>("HigherRange")
                        .HasColumnType("text");

                    b.Property<string>("LowerRange")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PWHT")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SpecialCondition")
                        .HasColumnType("text");

                    b.Property<string>("SubFluid")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DMGuide");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(8945),
                            DMCode = "IC",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "Natural Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9124),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Mixed Feed",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9130),
                            DMCode = "Erosion",
                            DMDescription = "Erosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Mixed Feed",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "At Steam Injection area",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9134),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Primary Reformed Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9137),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9142),
                            DMCode = "Under deposit corrosion",
                            DMDescription = "Under deposit corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Convection coil combustion air pre heater cold side",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9161),
                            DMCode = "Condensation Internal corrosion",
                            DMDescription = "Condensation Internal corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Process air interstage coolers and lines",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9165),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Secondary Reforming",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 9,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9168),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "CO-CONVERSION",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 10,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9171),
                            DMCode = "Condensation Internal corrosion",
                            DMDescription = "Condensation Internal corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "CO-CONVERSION",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "If condensation possible",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 11,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9174),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 12,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9178),
                            DMCode = "Erosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "High erosion possible on local areas if vel >2 m/s",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 13,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9181),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.03",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 14,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9184),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 15,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9187),
                            DMCode = "General Internal corrosion",
                            DMDescription = "CO2 Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 16,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9191),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Methanated Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 17,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9194),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Synthesis Gas Compressor",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 18,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9197),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Synthesis Loop",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 19,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9201),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 20,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9204),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 21,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9207),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Purge Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 22,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9212),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "Amm Recovery",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Alchaline corrosion due to higher Ammonia",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 23,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9215),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "BF Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 24,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9219),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Condensate",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 25,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9223),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "HP Steam",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 26,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9226),
                            DMCode = "Under deposit corrosion",
                            DMDescription = "Under deposit corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "HP Steam",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "Tubes in vertical exchangers like waste heat boiler",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 27,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9229),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "LP/MP Steam",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 28,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9232),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "DM Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 29,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9238),
                            DMCode = "Micro biological corrosion",
                            DMDescription = "Micro biological corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "DM Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "generally happened with few years of commissioning.",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 30,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9241),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Process Condensate",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 31,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9246),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.5",
                            DMType = "IC",
                            FluidName = "Sea Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Depends on coating/lining condition",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 32,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9250),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Closed Cooling Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 33,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9253),
                            DMCode = "Micro biological corrosion",
                            DMDescription = "Micro biological corrosion",
                            DMRate = "0.2",
                            DMType = "IC",
                            FluidName = "Closed Cooling Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "In case of improper treatment",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 34,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9256),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-RICH"
                        },
                        new
                        {
                            ID = 35,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9260),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Semi lean"
                        },
                        new
                        {
                            ID = 36,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9263),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Lean"
                        },
                        new
                        {
                            ID = 37,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9266),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Wet CO2 corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 38,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9270),
                            DMCode = "Wet CO2 corrosion",
                            DMDescription = "Wet CO2 corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 39,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9273),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Atmospheric Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Atmosphere",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 40,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9277),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-RICH"
                        },
                        new
                        {
                            ID = 41,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9280),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Semi lean"
                        },
                        new
                        {
                            ID = 42,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9284),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Lean"
                        },
                        new
                        {
                            ID = 43,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9287),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Flue Gas Corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Convection Coils- External",
                            MaterialCode = "All",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 44,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9290),
                            DMCode = "General Internal corrosion",
                            DMDescription = "CO2 Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "CO2-RICH AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 45,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9293),
                            DMCode = "Erosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "High erosion possible on local areas if vel >2 m/s",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 46,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9295),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.03",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 47,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9307),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 48,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9311),
                            DMCode = "Wet H2S Cracking",
                            DMDescription = "Wet H2S Cracking",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Natural Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "See the charts",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 49,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9316),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-RICH AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 50,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9319),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 51,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9322),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-SEMI LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 52,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9325),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 53,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9328),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Methanated Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 54,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9331),
                            DMCode = "SCC-Amm",
                            DMDescription = "SCC-Amm",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 55,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9334),
                            DMCode = "SCC-Amm",
                            DMDescription = "SCC-Amm",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 56,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9338),
                            DMCode = "Corr-Fatigue",
                            DMDescription = "Corr-Fatigue",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Purge Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Non PWHT ",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 57,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9341),
                            DMCode = "SCC-Alkhaline",
                            DMDescription = "SCC-Alkhaline",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Amm Recovery",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Alchaline corrosion due to higher Ammonia",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 58,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9344),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S-RICH AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 59,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9348),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S-SEMI LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 60,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9352),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S- LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 61,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9355),
                            DMCode = "West H2S Cracking",
                            DMDescription = "West H2S Cracking",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 62,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9359),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "H2S-RICH AMINE-MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "PWHT is required",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 63,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9362),
                            DMCode = "AMINE cracking",
                            DMDescription = "AMINE cracking",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "H2S-SEMI LEAN AMINE-MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "PWHT is required",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 64,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9365),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-RICH AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 65,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9368),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-LEAN AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 66,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(9372),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-SEMI LEAN AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.DMMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DMMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<decimal?>("Frequency")
                        .HasColumnType("numeric");

                    b.Property<string>("Interval")
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DMMaster");
                });

            modelBuilder.Entity("Piping.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("DepartmentCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("DepartmentName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "QLT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 738, DateTimeKind.Local).AddTicks(4138),
                            Name = "Quality"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "PRD",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 738, DateTimeKind.Local).AddTicks(4254),
                            Name = "Production"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "OPR",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 738, DateTimeKind.Local).AddTicks(4259),
                            Name = "Operation"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "MNT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 738, DateTimeKind.Local).AddTicks(4262),
                            Name = "Maintenance"
                        });
                });

            modelBuilder.Entity("Piping.Entities.DocumentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocumentMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Content")
                        .HasColumnName("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DocumentNo")
                        .IsRequired()
                        .HasColumnName("DocumentNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnName("DocumentType")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("FileName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnName("Format")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnName("ReferenceNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DocumentMaster");
                });

            modelBuilder.Entity("Piping.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOB")
                        .HasColumnName("DOB")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOJ")
                        .HasColumnName("DOJ")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOR")
                        .HasColumnName("DOR")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("integer");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnName("EmployeeNo")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnName("Gender")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("PhotoContent")
                        .HasColumnName("PhotoContent")
                        .HasColumnType("bytea");

                    b.Property<string>("PhotoName")
                        .HasColumnName("PhotoName")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 739, DateTimeKind.Local).AddTicks(3396),
                            DepartmentID = 1,
                            Designation = "AssetIntegritySpecialist",
                            Email = "",
                            EmployeeNo = "E0001",
                            EmployeeType = "Permanent",
                            FirstName = "GIRIDHARA",
                            Gender = "M",
                            LastName = "DATLA",
                            Phone = "",
                            PhotoName = "Photo.png"
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalCorrosionRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalCorrosionRate_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CorrosionRate")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalCorrosionRate");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8414),
                            Driver = "M",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8529),
                            Driver = "T",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8533),
                            Driver = "D",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8537),
                            Driver = "S",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8541),
                            Driver = "M",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8545),
                            Driver = "T",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8548),
                            Driver = "D",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8552),
                            Driver = "S",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8554),
                            Driver = "M",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8557),
                            Driver = "T",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8560),
                            Driver = "D",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8563),
                            Driver = "S",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8566),
                            Driver = "M",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8569),
                            Driver = "T",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8571),
                            Driver = "D",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8575),
                            Driver = "S",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8578),
                            Driver = "M",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8580),
                            Driver = "T",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8583),
                            Driver = "D",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8586),
                            Driver = "S",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8588),
                            Driver = "M",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8591),
                            Driver = "T",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8594),
                            Driver = "D",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8596),
                            Driver = "S",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8599),
                            Driver = "M",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8602),
                            Driver = "T",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8605),
                            Driver = "D",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(8608),
                            Driver = "S",
                            OperatingTemperatureInDegC = 121m
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalSeverityIndex", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalSeverityIndex_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("SeverityIndex")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalSeverityIndex");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(7986),
                            SeverityIndex = 50m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(8081),
                            SeverityIndex = 10m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(8087),
                            SeverityIndex = 1m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 752, DateTimeKind.Local).AddTicks(8090),
                            SeverityIndex = 0m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalSuceptability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalSuceptability_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC_From")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OperatingTemperatureInDegC_To")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_From")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_To")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalSuceptability");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7781),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7926),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7932),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7936),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7939),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7943),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7946),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7950),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7953),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7956),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(7959),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(8072),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(8075),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(8078),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(8080),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 751, DateTimeKind.Local).AddTicks(8083),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.IOW", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IOWID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IOWNo")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<string>("Max")
                        .HasColumnType("text");

                    b.Property<string>("Min")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Parameter")
                        .HasColumnType("text");

                    b.Property<string>("RelatedUnitNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TagNo")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("IOW");
                });

            modelBuilder.Entity("Piping.Entities.InspectionConfidence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionConfidenceID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CMLNo")
                        .HasColumnType("text");

                    b.Property<string>("ConfidenceLevel")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DamageMechanism")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<int?>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("InspectionProgram")
                        .HasColumnType("text");

                    b.Property<int?>("LastInspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NDTMethod")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionConfidence");
                });

            modelBuilder.Entity("Piping.Entities.InspectionDistribution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionDistributionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DistributionBy")
                        .HasColumnType("text");

                    b.Property<string>("DistributionCode")
                        .HasColumnType("text");

                    b.Property<string>("DistributionStatus")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Occurred")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionDistribution");
                });

            modelBuilder.Entity("Piping.Entities.InspectionDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionDocumentID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentType")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("FileFormat")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FileSize")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasMaxLength(25);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionDocument");
                });

            modelBuilder.Entity("Piping.Entities.InspectionObservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionObservationID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionObservation");
                });

            modelBuilder.Entity("Piping.Entities.InspectionProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionProgramID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Program")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionProgram");
                });

            modelBuilder.Entity("Piping.Entities.InspectionRecommendation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionRecommendationID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ActionCategory")
                        .HasColumnType("text");

                    b.Property<string>("ActionNo")
                        .HasColumnType("text");

                    b.Property<string>("ActionUpdateDate")
                        .HasColumnType("text");

                    b.Property<string>("CommentByActionTaker")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedTargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("RecommendedAction")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("Responsible")
                        .HasColumnType("text");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WONumber")
                        .HasColumnType("text");

                    b.Property<string>("WOStatus")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionRecommendation");
                });

            modelBuilder.Entity("Piping.Entities.InspectionStrategy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionStrategyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("Frequency")
                        .HasColumnType("text");

                    b.Property<int?>("InspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NDTMethod")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("RecommendedAction")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionStrategy");
                });

            modelBuilder.Entity("Piping.Entities.InsulationType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_InsulationType_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("AdjustmentFactor")
                        .HasColumnName("AdjustmentFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_InsulationType");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 747, DateTimeKind.Local).AddTicks(9884),
                            Name = "Unknown/Unspecified"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            AdjustmentFactor = 0.75m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(68),
                            Name = "Foamglass"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            AdjustmentFactor = 1m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(73),
                            Name = "Pearlite"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(75),
                            Name = "Fiberglass"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(78),
                            Name = "Mineral Wool"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(81),
                            Name = "Calcium Silicate"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 748, DateTimeKind.Local).AddTicks(85),
                            Name = "Asbestos"
                        });
                });

            modelBuilder.Entity("Piping.Entities.MaterialCodes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_MaterialCodes_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .HasColumnName("MaterialCode")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("MaterialName")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_MaterialCodes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "CS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4039),
                            Name = "CS"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "LAS-P1",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4163),
                            Name = "LAS-P1"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "LAS-P11",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4167),
                            Name = "LAS-P11"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "LAS-P12",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4170),
                            Name = "LAS-P12"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "LAS-P22",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4173),
                            Name = "LAS-P22"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "LAS-P5",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4175),
                            Name = "LAS-P5"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "LAS-P91",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4178),
                            Name = "LAS-P91"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "SS-300",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4181),
                            Name = "SS-300"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "SS-400",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4183),
                            Name = "SS-400"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "SS-Aus",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4185),
                            Name = "SS-Aus"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "SS-SDup",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4188),
                            Name = "SS-SDup"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "SS-Dup",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4190),
                            Name = "SS-Dup"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "NBA-800",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4193),
                            Name = "NBA-800"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "NBA-600",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 750, DateTimeKind.Local).AddTicks(4195),
                            Name = "NBA-600"
                        });
                });

            modelBuilder.Entity("Piping.Entities.MaterialMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_MATERIAL_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DTEMP_UPTO_1001_UPTO_1025")
                        .HasColumnName("DTEMP_UPTO_1001_UPTO_1025")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_101_UPTO_125")
                        .HasColumnName("DTEMP_UPTO_101_UPTO_125")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1026_UPTO_1050")
                        .HasColumnName("DTEMP_UPTO_1026_UPTO_1050")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1051_UPTO_1075")
                        .HasColumnName("DTEMP_UPTO_1051_UPTO_1075")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1076_UPTO_1100")
                        .HasColumnName("DTEMP_UPTO_1076_UPTO_1100")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_126_UPTO_150")
                        .HasColumnName("DTEMP_UPTO_126_UPTO_150")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_151_UPTO_175")
                        .HasColumnName("DTEMP_UPTO_151_UPTO_175")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_176_UPTO_200")
                        .HasColumnName("DTEMP_UPTO_176_UPTO_200")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_201_UPTO_225")
                        .HasColumnName("DTEMP_UPTO_201_UPTO_225")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_226_UPTO_250")
                        .HasColumnName("DTEMP_UPTO_226_UPTO_250")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_251_UPTO_275")
                        .HasColumnName("DTEMP_UPTO_251_UPTO_275")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_276_UPTO_300")
                        .HasColumnName("DTEMP_UPTO_276_UPTO_300")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_301_UPTO_325")
                        .HasColumnName("DTEMP_UPTO_301_UPTO_325")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_326_UPTO_350")
                        .HasColumnName("DTEMP_UPTO_326_UPTO_350")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_351_UPTO_375")
                        .HasColumnName("DTEMP_UPTO_351_UPTO_375")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_376_UPTO_400")
                        .HasColumnName("DTEMP_UPTO_376_UPTO_400")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_40")
                        .HasColumnName("DTEMP_UPTO_40")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_401_UPTO_425")
                        .HasColumnName("DTEMP_UPTO_401_UPTO_425")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_41_UPTO_65")
                        .HasColumnName("DTEMP_UPTO_41_UPTO_65")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_426_UPTO_450")
                        .HasColumnName("DTEMP_UPTO_426_UPTO_450")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_451_UPTO_475")
                        .HasColumnName("DTEMP_UPTO_451_UPTO_475")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_476_UPTO_500")
                        .HasColumnName("DTEMP_UPTO_476_UPTO_500")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_501_UPTO_525")
                        .HasColumnName("DTEMP_UPTO_501_UPTO_525")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_526_UPTO_550")
                        .HasColumnName("DTEMP_UPTO_526_UPTO_550")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_551_UPTO_575")
                        .HasColumnName("DTEMP_UPTO_551_UPTO_575")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_576_UPTO_600")
                        .HasColumnName("DTEMP_UPTO_576_UPTO_600")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_601_UPTO_625")
                        .HasColumnName("DTEMP_UPTO_601_UPTO_625")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_626_UPTO_650")
                        .HasColumnName("DTEMP_UPTO_626_UPTO_650")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_651_UPTO_675")
                        .HasColumnName("DTEMP_UPTO_651_UPTO_675")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_66_UPTO_100")
                        .HasColumnName("DTEMP_UPTO_66_UPTO_100")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_676_UPTO_700")
                        .HasColumnName("DTEMP_UPTO_676_UPTO_700")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_701_UPTO_725")
                        .HasColumnName("DTEMP_UPTO_701_UPTO_725")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_726_UPTO_750")
                        .HasColumnName("DTEMP_UPTO_726_UPTO_750")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_751_UPTO_775")
                        .HasColumnName("DTEMP_UPTO_751_UPTO_775")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_776_UPTO_800")
                        .HasColumnName("DTEMP_UPTO_776_UPTO_800")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_801_UPTO_825")
                        .HasColumnName("DTEMP_UPTO_801_UPTO_825")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_826_UPTO_850")
                        .HasColumnName("DTEMP_UPTO_826_UPTO_850")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_851_UPTO_875")
                        .HasColumnName("DTEMP_UPTO_851_UPTO_875")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_876_UPTO_900")
                        .HasColumnName("DTEMP_UPTO_876_UPTO_900")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_901_UPTO_925")
                        .HasColumnName("DTEMP_UPTO_901_UPTO_925")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_926_UPTO_950")
                        .HasColumnName("DTEMP_UPTO_926_UPTO_950")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_951_UPTO_975")
                        .HasColumnName("DTEMP_UPTO_951_UPTO_975")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_976_UPTO_1000")
                        .HasColumnName("DTEMP_UPTO_976_UPTO_1000")
                        .HasColumnType("text");

                    b.Property<string>("GROUP_NO")
                        .HasColumnName("GROUP_NO")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NOMINAL_COMPOSITION")
                        .HasColumnName("NOMINAL_COMPOSITION")
                        .HasColumnType("text");

                    b.Property<string>("PRODUCT_FORM")
                        .HasColumnName("PRODUCT_FORM")
                        .HasColumnType("text");

                    b.Property<string>("P_NO")
                        .HasColumnName("P_NO")
                        .HasColumnType("text");

                    b.Property<string>("SIZE_THICKNESS_MM")
                        .HasColumnName("SIZE_THICKNESS_MM")
                        .HasColumnType("text");

                    b.Property<string>("SPEC_NO")
                        .HasColumnName("SPEC_NO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STRENGTH_MPA")
                        .HasColumnName("TENSILE_STRENGTH_MPA")
                        .HasColumnType("text");

                    b.Property<string>("TYPE_GRADE")
                        .HasColumnName("TYPE_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("UNS_NO")
                        .HasColumnName("UNS_NO")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_MPA")
                        .HasColumnName("YIELD_STRENGTH_MPA")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("MST_MATERIAL");
                });

            modelBuilder.Entity("Piping.Entities.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("MenuCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DisplayOrder")
                        .HasColumnName("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("MenuName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentMenuID")
                        .HasColumnName("ParentMenuID")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .HasColumnName("Path")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ParentMenuID");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "SE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8207),
                            DisplayOrder = 1,
                            Icon = "fa fa-home",
                            Name = "Static Equipment",
                            Path = ""
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "PI",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8334),
                            DisplayOrder = 2,
                            Icon = "fa fa-home",
                            Name = "Piping",
                            Path = ""
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "ST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8338),
                            DisplayOrder = 3,
                            Icon = "fa fa-home",
                            Name = "Storage Tanks",
                            Path = ""
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "PRD",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8341),
                            DisplayOrder = 4,
                            Icon = "fa fa-home",
                            Name = "Pressure Relieving devices",
                            Path = ""
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "HCK",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8343),
                            DisplayOrder = 5,
                            Icon = "fa fa-home",
                            Name = "Home with configurable KIPs",
                            Path = ""
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "RPT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8346),
                            DisplayOrder = 6,
                            Icon = "fa fa-home",
                            Name = "Reports",
                            Path = ""
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "AFU",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8348),
                            DisplayOrder = 7,
                            Icon = "fa fa-home",
                            Name = "Action Follow up",
                            Path = ""
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "IMS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8350),
                            DisplayOrder = 8,
                            Icon = "fa fa-home",
                            Name = "Integrity management statistics",
                            Path = ""
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "IOW",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8353),
                            DisplayOrder = 9,
                            Icon = "fa fa-home",
                            Name = "IOWs",
                            Path = ""
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "PM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8356),
                            DisplayOrder = 10,
                            Icon = "fa fa-home",
                            Name = "Project Management",
                            Path = ""
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "WQC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8358),
                            DisplayOrder = 11,
                            Icon = "fa fa-home",
                            Name = "Welding Quality control",
                            Path = ""
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "PMAST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8363),
                            DisplayOrder = 201,
                            Icon = "fa fa-file",
                            Name = "Piping Master",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "PRGEN",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8365),
                            DisplayOrder = 202,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Gen",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "PRTML",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8368),
                            DisplayOrder = 203,
                            Icon = "fa fa-file",
                            Name = "Piping Report-TML",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            Code = "PRCON",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8370),
                            DisplayOrder = 204,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Confidence",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            Code = "PROBS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8373),
                            DisplayOrder = 205,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Observations",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            Code = "PRRCM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8375),
                            DisplayOrder = 206,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Recommendations",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            Code = "PRRST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8378),
                            DisplayOrder = 207,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Reom-Status",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            Code = "PRRST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8381),
                            DisplayOrder = 207,
                            Icon = "fa fa-file",
                            Name = "Corrosion Study",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            Code = "PCLST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8385),
                            DisplayOrder = 208,
                            Icon = "fa fa-file",
                            Name = "Piping Cluster",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            Code = "POFCL",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8387),
                            DisplayOrder = 209,
                            Icon = "fa fa-file",
                            Name = "POF calculation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            Code = "COFCL",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8419),
                            DisplayOrder = 210,
                            Icon = "fa fa-file",
                            Name = "COF calculation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            Code = "INPRG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8421),
                            DisplayOrder = 211,
                            Icon = "fa fa-file",
                            Name = "Inspection Program",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            Code = "MNGMT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8423),
                            DisplayOrder = 212,
                            Icon = "fa fa-file",
                            Name = "Management",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            Code = "PTORG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8425),
                            DisplayOrder = 213,
                            Icon = "fa fa-file",
                            Name = "Plant Organisation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            Code = "PTDST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8428),
                            DisplayOrder = 214,
                            Icon = "fa fa-file",
                            Name = "Plant Distribution",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            Code = "SBCFG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8431),
                            DisplayOrder = 215,
                            Icon = "fa fa-file",
                            Name = "Dashboard configuration",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            Code = "TCREF",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 726, DateTimeKind.Local).AddTicks(8433),
                            DisplayOrder = 216,
                            Icon = "fa fa-file",
                            Name = "Table cross reference",
                            ParentMenuID = 2,
                            Path = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.ObservationMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObservationMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_Observation");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(1157),
                            Description = "Inspection done as per the program and no major abnormalities found."
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(1323),
                            Description = "Visual inspection done and paint damage seen at marked location in the attached drawing."
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(1328),
                            Description = "Visual inspection done and insulation damage seen at marked location in the attached drawing."
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(1331),
                            Description = "Support system found defective."
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 753, DateTimeKind.Local).AddTicks(1334),
                            Description = "Line found vibration."
                        });
                });

            modelBuilder.Entity("Piping.Entities.POFEC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_EC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdjustedSuceptability")
                        .HasColumnType("text");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Art")
                        .HasColumnName("Art")
                        .HasColumnType("numeric");

                    b.Property<int?>("CoatAdjustment")
                        .HasColumnName("CoatAdjustment")
                        .HasColumnType("integer");

                    b.Property<int?>("CoatingAge")
                        .HasColumnName("CoatingAge")
                        .HasColumnType("integer");

                    b.Property<string>("CoatingQuality")
                        .HasColumnName("CoatingQuality")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("CorrosionType")
                        .HasColumnName("CorrosionType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("Driver")
                        .HasColumnName("Driver")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("EffectiveAge")
                        .HasColumnName("EffectiveAge")
                        .HasColumnType("integer");

                    b.Property<decimal?>("EffectiveCR")
                        .HasColumnName("EffectiveCR")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ExternalProcess")
                        .HasColumnName("ExternalProcess")
                        .HasColumnType("text");

                    b.Property<decimal?>("FlowStress")
                        .HasColumnName("FlowStress")
                        .HasColumnType("numeric");

                    b.Property<int?>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int?>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InsulationCondition")
                        .HasColumnType("text");

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnName("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<int?>("LineAge")
                        .HasColumnName("LineAge")
                        .HasColumnType("integer");

                    b.Property<int?>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredLCR")
                        .HasColumnName("MeasuredLCR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredSCR")
                        .HasColumnName("MeasuredSCR")
                        .HasColumnType("numeric");

                    b.Property<int?>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("numeric");

                    b.Property<string>("PipeDirectBeamComplexDesign")
                        .HasColumnName("PipeDirectBeamComplexDesign")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("Repainted")
                        .HasColumnType("text");

                    b.Property<int?>("RepaintedYear")
                        .HasColumnName("RepaintedYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SeverityIndex")
                        .HasColumnType("numeric");

                    b.Property<string>("SoilInterfaceCondensation")
                        .HasColumnName("SoilInterfaceCondensation")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("StrengthRatio")
                        .HasColumnName("StrengthRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TheoriticalCR")
                        .HasColumnName("TheoriticalCR")
                        .HasColumnType("numeric");

                    b.Property<string>("UseMeasuredLCR")
                        .HasColumnName("UseMeasuredLCR")
                        .HasColumnType("text");

                    b.Property<string>("UseMeasuredSCR")
                        .HasColumnName("UseMeasuredSCR")
                        .HasColumnType("text");

                    b.Property<int?>("VeryHigh")
                        .HasColumnName("VeryHigh")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_EC");
                });

            modelBuilder.Entity("Piping.Entities.POFIC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_IC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Art")
                        .HasColumnName("Art")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("numeric");

                    b.Property<int?>("EffectiveAge")
                        .HasColumnName("EffectiveAge")
                        .HasColumnType("integer");

                    b.Property<decimal?>("EffectiveCR")
                        .HasColumnName("EffectiveCR")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("FlowStress")
                        .HasColumnName("FlowStress")
                        .HasColumnType("numeric");

                    b.Property<int?>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int?>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InjectionPoints")
                        .IsRequired()
                        .HasColumnName("InjectionPoints")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnName("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<int?>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredLCR")
                        .HasColumnName("MeasuredLCR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredSCR")
                        .HasColumnName("MeasuredSCR")
                        .HasColumnType("numeric");

                    b.Property<int?>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("numeric");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StrengthRatio")
                        .HasColumnName("StrengthRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TheoriticalCR")
                        .HasColumnName("TheoriticalCR")
                        .HasColumnType("numeric");

                    b.Property<string>("UseMeasuredLCR")
                        .HasColumnName("UseMeasuredLCR")
                        .HasColumnType("text");

                    b.Property<string>("UseMeasuredSCR")
                        .HasColumnName("UseMeasuredSCR")
                        .HasColumnType("text");

                    b.Property<int?>("VeryHigh")
                        .HasColumnName("VeryHigh")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_IC");
                });

            modelBuilder.Entity("Piping.Entities.POFMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POFMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("POFMaster");
                });

            modelBuilder.Entity("Piping.Entities.POFODM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_ODM_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .IsRequired()
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<decimal>("DamageReductionFactor")
                        .HasColumnName("DamageReductionFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InitialSuceptability")
                        .IsRequired()
                        .HasColumnName("InitialSuceptability")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<int>("IntialIndex")
                        .HasColumnName("IntialIndex")
                        .HasColumnType("integer");

                    b.Property<int>("LastYearVH")
                        .HasColumnName("LastYearVH")
                        .HasColumnType("integer");

                    b.Property<int>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<int>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_ODM");
                });

            modelBuilder.Entity("Piping.Entities.POFSCC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_SCC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .IsRequired()
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<decimal>("DamageReductionFactor")
                        .HasColumnName("DamageReductionFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InitialSuceptability")
                        .IsRequired()
                        .HasColumnName("InitialSuceptability")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<int>("IntialIndex")
                        .HasColumnName("IntialIndex")
                        .HasColumnType("integer");

                    b.Property<int>("LastYearVH")
                        .HasColumnName("LastYearVH")
                        .HasColumnType("integer");

                    b.Property<int>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<int>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_SCC");
                });

            modelBuilder.Entity("Piping.Entities.POF_EC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_POF_EC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ALLOWABLE_STRESS_PSI")
                        .HasColumnName("ALLOWABLE_STRESS_PSI")
                        .HasColumnType("text");

                    b.Property<string>("ART")
                        .HasColumnName("ART")
                        .HasColumnType("text");

                    b.Property<string>("AVAILABLE_THK")
                        .HasColumnName("AVAILABLE_THK")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_1")
                        .HasColumnName("CAL_OF_BETA_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_2")
                        .HasColumnName("CAL_OF_BETA_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_3")
                        .HasColumnName("CAL_OF_BETA_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_1")
                        .HasColumnName("CAL_OF_BETA_CONST_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_2")
                        .HasColumnName("CAL_OF_BETA_CONST_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_3")
                        .HasColumnName("CAL_OF_BETA_CONST_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVP")
                        .HasColumnName("CAL_OF_BETA_COVP")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVSF")
                        .HasColumnName("CAL_OF_BETA_COVSF")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVT")
                        .HasColumnName("CAL_OF_BETA_COVT")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnType("text");

                    b.Property<int?>("COATING_AGE")
                        .HasColumnName("COATING_AGE")
                        .HasColumnType("integer");

                    b.Property<string>("COATING_QUALITY")
                        .HasColumnName("COATING_QUALITY")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("COAT_ADJUSTMENT")
                        .HasColumnName("COAT_ADJUSTMENT")
                        .HasColumnType("integer");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_ALLOWANCE")
                        .HasColumnName("CORROSION_ALLOWANCE")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_TYPE")
                        .HasColumnName("CORROSION_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DAMAGE_FACTOR")
                        .HasColumnName("DAMAGE_FACTOR")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_PRESSURE_P_PSI")
                        .HasColumnName("DESIGN_PRESSURE_P_PSI")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_TEMP_DEGF")
                        .HasColumnName("DESIGN_TEMP_DEGF")
                        .HasColumnType("text");

                    b.Property<string>("EC_DRIVER")
                        .HasColumnName("EC_DRIVER")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("EFFECTIVE_AGE")
                        .HasColumnName("EFFECTIVE_AGE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORROSION_RATE")
                        .HasColumnName("EFFECTIVE_CORROSION_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORR_RATE")
                        .HasColumnName("EFFECTIVE_CORR_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_THK")
                        .HasColumnName("EFFECTIVE_THK")
                        .HasColumnType("text");

                    b.Property<string>("EFFICIENCY_OF_WELD_E")
                        .HasColumnName("EFFICIENCY_OF_WELD_E")
                        .HasColumnType("text");

                    b.Property<string>("EQUIPMENT_NO")
                        .HasColumnName("EQUIPMENT_NO")
                        .HasColumnType("text");

                    b.Property<string>("EXTERNAL_PROCESS")
                        .HasColumnName("EXTERNAL_PROCESS")
                        .HasColumnType("text");

                    b.Property<string>("FLOW_STRESS")
                        .HasColumnName("FLOW_STRESS")
                        .HasColumnType("text");

                    b.Property<string>("HALF_LIFE")
                        .HasColumnName("HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("HIGH")
                        .HasColumnName("HIGH")
                        .HasColumnType("text");

                    b.Property<string>("INJECTION_POINTS_INTERMITENT")
                        .HasColumnName("INJECTION_POINTS_INTERMITENT")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnName("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnName("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnType("text");

                    b.Property<int?>("LINE_AGE")
                        .HasColumnName("LINE_AGE")
                        .HasColumnType("integer");

                    b.Property<string>("LOW")
                        .HasColumnName("LOW")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_GRADE")
                        .HasColumnName("MATERIAL_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_STD")
                        .HasColumnName("MATERIAL_STD")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnName("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnName("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("MEDIUM")
                        .HasColumnName("MEDIUM")
                        .HasColumnType("text");

                    b.Property<string>("MIN_REQ_THK")
                        .HasColumnName("MIN_REQ_THK")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NO")
                        .HasColumnName("NO")
                        .HasColumnType("text");

                    b.Property<string>("NOM_DIA_D_INCHES")
                        .HasColumnName("NOM_DIA_D_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("NOM_THK_NT_INCHES")
                        .HasColumnName("NOM_THK_NT_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("OVERALL_POF")
                        .HasColumnName("OVERALL_POF")
                        .HasColumnType("text");

                    b.Property<string>("PIPE_DIRECT_BEAM_COMPLEX_DESIGN")
                        .HasColumnName("PIPE_DIRECT_BEAM_COMPLEX_DESIGN")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("text");

                    b.Property<string>("POF_EXPO")
                        .HasColumnName("POF_EXPO")
                        .HasColumnType("text");

                    b.Property<string>("POF_HALF_LIFE")
                        .HasColumnName("POF_HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_1")
                        .HasColumnName("POSTERIOR_PROBABILITY_1")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_2")
                        .HasColumnName("POSTERIOR_PROBABILITY_2")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_3")
                        .HasColumnName("POSTERIOR_PROBABILITY_3")
                        .HasColumnType("text");

                    b.Property<string>("PRESENT_YEAR")
                        .HasColumnName("PRESENT_YEAR")
                        .HasColumnType("text");

                    b.Property<string>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("text");

                    b.Property<string>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("text");

                    b.Property<string>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("text");

                    b.Property<string>("REMAINING_LIFE")
                        .HasColumnName("REMAINING_LIFE")
                        .HasColumnType("text");

                    b.Property<int?>("REPAINTED_YEAR")
                        .HasColumnName("REPAINTED_YEAR")
                        .HasColumnType("integer");

                    b.Property<string>("SOIL_INTERFACE_CONDENSATION")
                        .HasColumnName("SOIL_INTERFACE_CONDENSATION")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STENGTH_RATIO")
                        .HasColumnName("STENGTH_RATIO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STREGTH_KSI")
                        .HasColumnName("TENSILE_STREGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnName("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_LICR")
                        .HasColumnName("USE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_SICR")
                        .HasColumnName("USE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("VERY_HIGH")
                        .HasColumnName("VERY_HIGH")
                        .HasColumnType("text");

                    b.Property<string>("YEAR_IN_SERVICE")
                        .HasColumnName("YEAR_IN_SERVICE")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_KSI")
                        .HasColumnName("YIELD_STRENGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("YOUNGS_MODULUS_Y")
                        .HasColumnName("YOUNGS_MODULUS_Y")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TBL_POF_EC");
                });

            modelBuilder.Entity("Piping.Entities.POF_IC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_POF_IC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ALLOWABLE_STRESS_PSI")
                        .HasColumnName("ALLOWABLE_STRESS_PSI")
                        .HasColumnType("text");

                    b.Property<string>("ART")
                        .HasColumnName("ART")
                        .HasColumnType("text");

                    b.Property<string>("AVAILABLE_THK")
                        .HasColumnName("AVAILABLE_THK")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_1")
                        .HasColumnName("CAL_OF_BETA_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_2")
                        .HasColumnName("CAL_OF_BETA_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_3")
                        .HasColumnName("CAL_OF_BETA_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_1")
                        .HasColumnName("CAL_OF_BETA_CONST_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_2")
                        .HasColumnName("CAL_OF_BETA_CONST_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_3")
                        .HasColumnName("CAL_OF_BETA_CONST_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVP")
                        .HasColumnName("CAL_OF_BETA_COVP")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVSF")
                        .HasColumnName("CAL_OF_BETA_COVSF")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVT")
                        .HasColumnName("CAL_OF_BETA_COVT")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_ALLOWANCE")
                        .HasColumnName("CORROSION_ALLOWANCE")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_TYPE")
                        .HasColumnName("CORROSION_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DAMAGE_FACTOR")
                        .HasColumnName("DAMAGE_FACTOR")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_PRESSURE_P_PSI")
                        .HasColumnName("DESIGN_PRESSURE_P_PSI")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_TEMP_DEGF")
                        .HasColumnName("DESIGN_TEMP_DEGF")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_AGE")
                        .HasColumnName("EFFECTIVE_AGE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORROSION_RATE")
                        .HasColumnName("EFFECTIVE_CORROSION_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORR_RATE")
                        .HasColumnName("EFFECTIVE_CORR_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_THK")
                        .HasColumnName("EFFECTIVE_THK")
                        .HasColumnType("text");

                    b.Property<string>("EFFICIENCY_OF_WELD_E")
                        .HasColumnName("EFFICIENCY_OF_WELD_E")
                        .HasColumnType("text");

                    b.Property<string>("EQUIPMENT_NO")
                        .HasColumnName("EQUIPMENT_NO")
                        .HasColumnType("text");

                    b.Property<string>("FLOW_STRESS")
                        .HasColumnName("FLOW_STRESS")
                        .HasColumnType("text");

                    b.Property<string>("HALF_LIFE")
                        .HasColumnName("HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("HIGH")
                        .HasColumnName("HIGH")
                        .HasColumnType("text");

                    b.Property<string>("INJECTION_POINTS_INTERMITENT")
                        .HasColumnName("INJECTION_POINTS_INTERMITENT")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnName("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnName("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnType("text");

                    b.Property<string>("LOW")
                        .HasColumnName("LOW")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_GRADE")
                        .HasColumnName("MATERIAL_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_STD")
                        .HasColumnName("MATERIAL_STD")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnName("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnName("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("MEDIUM")
                        .HasColumnName("MEDIUM")
                        .HasColumnType("text");

                    b.Property<string>("MIN_REQ_THK")
                        .HasColumnName("MIN_REQ_THK")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NO")
                        .HasColumnName("NO")
                        .HasColumnType("text");

                    b.Property<string>("NOM_DIA_D_INCHES")
                        .HasColumnName("NOM_DIA_D_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("NOM_THK_NT_INCHES")
                        .HasColumnName("NOM_THK_NT_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("OVERALL_POF")
                        .HasColumnName("OVERALL_POF")
                        .HasColumnType("text");

                    b.Property<string>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("text");

                    b.Property<string>("POF_EXPO")
                        .HasColumnName("POF_EXPO")
                        .HasColumnType("text");

                    b.Property<string>("POF_HALF_LIFE")
                        .HasColumnName("POF_HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_1")
                        .HasColumnName("POSTERIOR_PROBABILITY_1")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_2")
                        .HasColumnName("POSTERIOR_PROBABILITY_2")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_3")
                        .HasColumnName("POSTERIOR_PROBABILITY_3")
                        .HasColumnType("text");

                    b.Property<string>("PRESENT_YEAR")
                        .HasColumnName("PRESENT_YEAR")
                        .HasColumnType("text");

                    b.Property<string>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("text");

                    b.Property<string>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("text");

                    b.Property<string>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("text");

                    b.Property<string>("REMAINING_LIFE")
                        .HasColumnName("REMAINING_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("STENGTH_RATIO")
                        .HasColumnName("STENGTH_RATIO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STREGTH_KSI")
                        .HasColumnName("TENSILE_STREGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnName("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_LICR")
                        .HasColumnName("USE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_SICR")
                        .HasColumnName("USE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("VERY_HIGH")
                        .HasColumnName("VERY_HIGH")
                        .HasColumnType("text");

                    b.Property<string>("YEAR_IN_SERVICE")
                        .HasColumnName("YEAR_IN_SERVICE")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_KSI")
                        .HasColumnName("YIELD_STRENGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("YOUNGS_MODULUS_Y")
                        .HasColumnName("YOUNGS_MODULUS_Y")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TBL_POF_IC");
                });

            modelBuilder.Entity("Piping.Entities.PRP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_PRP_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("numeric");

                    b.Property<string>("PRP_CONFIDENCE")
                        .HasColumnName("PRP_CONFIDENCE")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("TBL_PRP");
                });

            modelBuilder.Entity("Piping.Entities.PipeCluster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeClusterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PWHT")
                        .HasColumnType("text");

                    b.Property<string>("PipeSpecification")
                        .HasColumnType("text");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("PipeCluster");
                });

            modelBuilder.Entity("Piping.Entities.PipeClusterPOF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeClusterPOFID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("DMDescription")
                        .HasColumnType("text");

                    b.Property<string>("DMGuideDocument")
                        .HasColumnType("text");

                    b.Property<decimal?>("DMRate")
                        .HasColumnType("numeric");

                    b.Property<string>("DMSeverity")
                        .HasColumnType("text");

                    b.Property<string>("DMSuceptability")
                        .HasColumnType("text");

                    b.Property<string>("DMType")
                        .HasColumnType("text");

                    b.Property<string>("Fluid")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SpecialCondition")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("PipeClusterPOF");
                });

            modelBuilder.Entity("Piping.Entities.PipeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AllowableStressMPA_S")
                        .HasColumnName("AllowableStressMPA_S")
                        .HasColumnType("numeric");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<string>("AreaCode")
                        .HasColumnName("AreaCode")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<string>("ConstructionCode")
                        .IsRequired()
                        .HasColumnName("ConstructionCode")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("CorrosionAllowance")
                        .HasColumnName("CorrosionAllowance")
                        .HasColumnType("numeric");

                    b.Property<string>("CorrosionLoopNo")
                        .IsRequired()
                        .HasColumnName("CorrosionLoopNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("DesignPressure")
                        .HasColumnName("DesignPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DesignTemperature")
                        .HasColumnName("DesignTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveMinReqThk_EMRT")
                        .HasColumnName("EffectiveMinReqThk_EMRT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveThk_ETHK")
                        .HasColumnName("EffectiveThk_ETHK")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .IsRequired()
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("FlowStress_FS")
                        .HasColumnName("FlowStress_FS")
                        .HasColumnType("numeric");

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasColumnName("Fluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FluidCode")
                        .IsRequired()
                        .HasColumnName("FluidCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FluidName")
                        .IsRequired()
                        .HasColumnName("FluidName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FromTo")
                        .HasColumnName("FromTo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Insulated")
                        .IsRequired()
                        .HasColumnName("Insulated")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("InsulationType")
                        .HasColumnName("InsulationType")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("JointEfficiency")
                        .HasColumnName("JointEfficiency")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LastMeasuredThick_LMT")
                        .HasColumnName("LastMeasuredThick_LMT")
                        .HasColumnType("numeric");

                    b.Property<int?>("LastMeasuredYear_LMY")
                        .HasColumnName("LastMeasuredYear_LMY")
                        .HasColumnType("integer");

                    b.Property<decimal>("Length")
                        .HasColumnName("Length")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MDMT")
                        .HasColumnName("MDMT")
                        .HasColumnType("numeric");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnName("MaterialCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MaterialGrade")
                        .IsRequired()
                        .HasColumnName("MaterialGrade")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MaterialStd")
                        .IsRequired()
                        .HasColumnName("MaterialStd")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MinReqThkOption_MRTO")
                        .HasColumnName("MinReqThkOption_MRTO")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextFollowDate")
                        .HasColumnName("NextFollowDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextInspectionDate")
                        .HasColumnName("NextInspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnName("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnName("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingPressure")
                        .HasColumnName("OperatingPressure")
                        .HasColumnType("numeric")
                        .HasMaxLength(25);

                    b.Property<decimal?>("OperatingTemperature")
                        .HasColumnName("OperatingTemperature")
                        .HasColumnType("numeric")
                        .HasMaxLength(25);

                    b.Property<string>("OverallCOF")
                        .HasColumnName("OverallCOF")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("OverallPOF")
                        .HasColumnName("OverallPOF")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("OverallRisk")
                        .HasColumnName("OverallRisk")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OverallStatus")
                        .HasColumnName("OverallStatus")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PWHT")
                        .IsRequired()
                        .HasColumnName("PWHT")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PandIDNo")
                        .HasColumnName("PandIDNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("PipeClusterNo")
                        .IsRequired()
                        .HasColumnName("PipeClusterNo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PipeSpec")
                        .IsRequired()
                        .HasColumnName("PipeSpec")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("PrMinReqThkExternal_PMTE")
                        .HasColumnName("PrMinReqThkExternal_PMTE")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PrMinReqThkInternal_PMTI")
                        .HasColumnName("PrMinReqThkInternal_PMTI")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StengthRatio_SR")
                        .HasColumnName("StengthRatio_SR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StructuralMinThk_SMT")
                        .HasColumnName("StructuralMinThk_SMT")
                        .HasColumnType("numeric");

                    b.Property<string>("SubFluid")
                        .IsRequired()
                        .HasColumnName("SubFluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TensileStrengthMPA_TS")
                        .HasColumnName("TensileStrengthMPA_TS")
                        .HasColumnType("numeric");

                    b.Property<string>("Train")
                        .IsRequired()
                        .HasColumnName("Train")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("UseLastMeasuredThick_ULMT")
                        .HasColumnName("UseLastMeasuredThick_ULMT")
                        .HasColumnType("text");

                    b.Property<decimal?>("UserCalPrMinReqThk_UMT")
                        .HasColumnName("UserCalPrMinReqThk_UMT")
                        .HasColumnType("numeric");

                    b.Property<int>("YearInService")
                        .HasColumnName("YearInService")
                        .HasColumnType("integer")
                        .HasMaxLength(4);

                    b.Property<decimal?>("YieldStrengthMPA_YS")
                        .HasColumnName("YieldStrengthMPA_YS")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("PipeMaster");
                });

            modelBuilder.Entity("Piping.Entities.PipeReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<string>("ConsequenceRank")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DefectCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EquipmentNo")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasColumnName("Fluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FromTo")
                        .HasColumnName("FromTo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InspectionBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InspectionType")
                        .HasColumnType("text");

                    b.Property<int?>("InspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("InsulationCondition")
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<decimal?>("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextFollowUpDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NextFollowupDate")
                        .HasColumnType("text");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<string>("OverallCOF")
                        .HasColumnType("text");

                    b.Property<string>("OverallCondition")
                        .HasColumnType("text");

                    b.Property<string>("OverallPOF")
                        .HasColumnType("text");

                    b.Property<string>("OverallStatus")
                        .HasColumnType("text");

                    b.Property<string>("PandIDNo")
                        .HasColumnName("PandIDNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("RCAModel")
                        .HasColumnType("text");

                    b.Property<string>("RCAStatus")
                        .HasColumnType("text");

                    b.Property<int?>("RepaintedYear")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequireRCA")
                        .HasColumnType("text");

                    b.Property<string>("ResultedInto")
                        .HasColumnType("text");

                    b.Property<string>("RevisedStatus")
                        .HasColumnType("text");

                    b.Property<string>("RootCause")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalManHours")
                        .HasColumnType("numeric");

                    b.Property<string>("Train")
                        .IsRequired()
                        .HasColumnName("Train")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("VerificationBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("VerificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WorkOrderNo")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("PipeReport");
                });

            modelBuilder.Entity("Piping.Entities.PlantMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlantMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("PlantName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentPlantID")
                        .HasColumnName("ParentPlantID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ParentPlantID");

                    b.ToTable("PlantMaster");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "Ammonia",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4461),
                            Icon = "assets/Ammonia.svg",
                            Name = "Ammonia"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "Urea",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4546),
                            Icon = "assets/Urea.svg",
                            Name = "Urea"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "Melamine",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4549),
                            Icon = "assets/Melamine.svg",
                            Name = "Melamine"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "Compressor",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4551),
                            Icon = "assets/Compressor.svg",
                            Name = "Compressor House"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "Utilits",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4553),
                            Icon = "assets/Utillits.svg",
                            Name = "Utilits"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "Others",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4555),
                            Icon = "assets/Others.svg",
                            Name = "Others"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "A1",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4559),
                            Name = "Ammonia 01",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "A2",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4561),
                            Name = "Ammonia 02",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "A3",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4563),
                            Name = "Ammonia 03",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "A4",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4565),
                            Name = "Ammonia 04",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "A5",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4567),
                            Name = "Ammonia 05",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "A6",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4569),
                            Name = "Ammonia 06",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "QPNT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4571),
                            Name = "QPNT",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "CH1",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4575),
                            Name = "Compressor House 01",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            Code = "CH2",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4577),
                            Name = "Compressor House 02",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            Code = "CH3",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4579),
                            Name = "Compressor House 03",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            Code = "CH4",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4581),
                            Name = "Compressor House 04",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            Code = "CH5",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4583),
                            Name = "Compressor House 05",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            Code = "CH6",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(4585),
                            Name = "Compressor House 06",
                            ParentPlantID = 4
                        });
                });

            modelBuilder.Entity("Piping.Entities.QuickLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QuickLinkID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DestinationTable")
                        .IsRequired()
                        .HasColumnName("DestinationTable")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationTableColumn")
                        .IsRequired()
                        .HasColumnName("DestinationTableColumn")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("QuickLinkName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SourceTable")
                        .IsRequired()
                        .HasColumnName("SourceTable")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SourceTableColumn")
                        .IsRequired()
                        .HasColumnName("SourceTableColumn")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("QuickLink");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(104),
                            DestinationTable = "PipeReport",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_PipingReports_Icon_Gray.svg",
                            Name = "Piping Reports",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(254),
                            DestinationTable = "COFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_COFMaster_Icon_Gray.svg",
                            Name = "COF Master Records",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(259),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_POFMaster_Icon_Gray.svg",
                            Name = "POF Master Records",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(261),
                            DestinationTable = "PipeReport",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_CorrosionStudy_Icon_Gray.svg",
                            Name = "Corrosion Study",
                            SourceTable = "CorrosionStudy",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(263),
                            DestinationTable = "COFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_LookupTables_Icon_Gray.svg",
                            Name = "Lookup Tables",
                            SourceTable = "LookupTables",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(265),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_RiskAnalysis_Icon_Gray.svg",
                            Name = "Risk Analysis",
                            SourceTable = "RiskAnalysis",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 730, DateTimeKind.Local).AddTicks(268),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_InspectionProgram_Icon_Gray.svg",
                            Name = "Inspection Program",
                            SourceTable = "InspectionProgram",
                            SourceTableColumn = "EquipmentNo"
                        });
                });

            modelBuilder.Entity("Piping.Entities.RiskAnalysis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RiskAnalysisID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AnalysisCummulativeRisk")
                        .HasColumnName("A_CummulativeRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisFinancial")
                        .HasColumnName("A_Financial")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisFinancialRisk")
                        .HasColumnName("A_FinancialRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisPOF")
                        .HasColumnName("A_POF")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisPriority")
                        .HasColumnName("A_Priority")
                        .HasColumnType("integer");

                    b.Property<string>("AnalysisRisk")
                        .HasColumnName("A_Risk")
                        .HasColumnType("text");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnName("A_Year")
                        .HasColumnType("integer");

                    b.Property<string>("COF")
                        .HasColumnName("COF")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CurrentCummulativeRisk")
                        .HasColumnName("C_CummulativeRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentFinancial")
                        .HasColumnName("C_Financial")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentFinancialRisk")
                        .HasColumnName("C_FinancialRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentPOF")
                        .HasColumnName("C_POF")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentPriority")
                        .HasColumnName("C_Priority")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentRisk")
                        .HasColumnName("C_Risk")
                        .HasColumnType("text");

                    b.Property<int?>("CurrentYear")
                        .HasColumnName("C_Year")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("RiskAnalysis");
                });

            modelBuilder.Entity("Piping.Entities.RiskPriority", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RiskPriorityID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("COF")
                        .HasColumnName("COF")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Financial")
                        .HasColumnName("Financial")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Risk")
                        .HasColumnName("Risk")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_RiskPriority");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4186),
                            Financial = 1000000,
                            POF = 1,
                            Priority = 1,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 2,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4294),
                            Financial = 100000,
                            POF = 2,
                            Priority = 3,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 3,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4299),
                            Financial = 10000,
                            POF = 3,
                            Priority = 5,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 4,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4303),
                            Financial = 1000,
                            POF = 4,
                            Priority = 10,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 5,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4306),
                            Financial = 100,
                            POF = 5,
                            Priority = 12,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 6,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4309),
                            Financial = 1000000,
                            POF = 1,
                            Priority = 2,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 7,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4312),
                            Financial = 100000,
                            POF = 2,
                            Priority = 6,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 8,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4315),
                            Financial = 1000,
                            POF = 3,
                            Priority = 9,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 9,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4317),
                            Financial = 100,
                            POF = 4,
                            Priority = 15,
                            Risk = "MEDIUMH"
                        },
                        new
                        {
                            ID = 10,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4320),
                            Financial = 10,
                            POF = 5,
                            Priority = 19,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 11,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4323),
                            Financial = 10000,
                            POF = 1,
                            Priority = 4,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 12,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4326),
                            Financial = 1000,
                            POF = 2,
                            Priority = 8,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 13,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4328),
                            Financial = 100,
                            POF = 3,
                            Priority = 14,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 14,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4331),
                            Financial = 10,
                            POF = 4,
                            Priority = 18,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 15,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4334),
                            Financial = 1,
                            POF = 5,
                            Priority = 22,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 16,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4337),
                            Financial = 1000,
                            POF = 1,
                            Priority = 7,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 17,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4340),
                            Financial = 100,
                            POF = 2,
                            Priority = 13,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 18,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4361),
                            Financial = 10,
                            POF = 3,
                            Priority = 17,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 19,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4364),
                            Financial = 1,
                            POF = 4,
                            Priority = 21,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 20,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4367),
                            Financial = 0,
                            POF = 5,
                            Priority = 24,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 21,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4370),
                            Financial = 100,
                            POF = 1,
                            Priority = 11,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 22,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4373),
                            Financial = 10,
                            POF = 2,
                            Priority = 16,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 23,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4375),
                            Financial = 1,
                            POF = 3,
                            Priority = 20,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 24,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4379),
                            Financial = 0,
                            POF = 4,
                            Priority = 23,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 25,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 754, DateTimeKind.Local).AddTicks(4382),
                            Financial = 0,
                            POF = 5,
                            Priority = 25,
                            Risk = "LOW"
                        });
                });

            modelBuilder.Entity("Piping.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("RoleCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("RoleName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "ADM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 723, DateTimeKind.Local).AddTicks(4049),
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "INS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5833),
                            Name = "Inspector"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "INE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5877),
                            Name = "Integrity Engineer"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "HOI",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5884),
                            Name = "Head of Integrity"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "MNT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5887),
                            Name = "Maintenance"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "OPR",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5890),
                            Name = "Operation"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "GEN",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 724, DateTimeKind.Local).AddTicks(5893),
                            Name = "General"
                        });
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuAction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleMenuActionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ActionID")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MenuID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ActionID");

                    b.HasIndex("MenuID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleMenuAction");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1693),
                            MenuID = 1,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1762),
                            MenuID = 2,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1765),
                            MenuID = 3,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1768),
                            MenuID = 4,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1771),
                            MenuID = 5,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1773),
                            MenuID = 6,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1775),
                            MenuID = 7,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1777),
                            MenuID = 8,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1779),
                            MenuID = 9,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1780),
                            MenuID = 10,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1783),
                            MenuID = 11,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 12,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1786),
                            MenuID = 12,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 13,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1789),
                            MenuID = 13,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 14,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1792),
                            MenuID = 14,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 15,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1794),
                            MenuID = 15,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 16,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1796),
                            MenuID = 16,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 17,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1798),
                            MenuID = 17,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 18,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1802),
                            MenuID = 18,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 19,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1806),
                            MenuID = 19,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 20,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1808),
                            MenuID = 20,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 21,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1810),
                            MenuID = 21,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 22,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1813),
                            MenuID = 22,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 23,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1815),
                            MenuID = 23,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 24,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1817),
                            MenuID = 24,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 25,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1819),
                            MenuID = 25,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 26,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1822),
                            MenuID = 26,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 27,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1824),
                            MenuID = 27,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 28,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1829),
                            MenuID = 28,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1831),
                            MenuID = 1,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1834),
                            MenuID = 2,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1837),
                            MenuID = 3,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1840),
                            MenuID = 4,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1842),
                            MenuID = 5,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1844),
                            MenuID = 6,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1846),
                            MenuID = 7,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 36,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1848),
                            MenuID = 8,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 37,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1850),
                            MenuID = 9,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 38,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1853),
                            MenuID = 10,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 39,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1856),
                            MenuID = 11,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 40,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1868),
                            MenuID = 12,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 41,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1872),
                            MenuID = 13,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 42,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1875),
                            MenuID = 14,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 43,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1877),
                            MenuID = 15,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 44,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1879),
                            MenuID = 16,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 45,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1880),
                            MenuID = 17,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 46,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1883),
                            MenuID = 18,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 47,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1884),
                            MenuID = 19,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 48,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1886),
                            MenuID = 20,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 49,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1889),
                            MenuID = 21,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 50,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1891),
                            MenuID = 22,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 51,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1893),
                            MenuID = 23,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 52,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1896),
                            MenuID = 24,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 53,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1898),
                            MenuID = 25,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 54,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1900),
                            MenuID = 26,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 55,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1902),
                            MenuID = 27,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 56,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1906),
                            MenuID = 28,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 57,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1909),
                            MenuID = 1,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 58,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1911),
                            MenuID = 2,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 59,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1912),
                            MenuID = 3,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 60,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1914),
                            MenuID = 4,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 61,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1916),
                            MenuID = 5,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 62,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1918),
                            MenuID = 6,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 63,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1920),
                            MenuID = 7,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 64,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1922),
                            MenuID = 8,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 65,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1924),
                            MenuID = 9,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 66,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1926),
                            MenuID = 10,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 67,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1928),
                            MenuID = 11,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 68,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1930),
                            MenuID = 14,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 69,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1931),
                            MenuID = 15,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 70,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1933),
                            MenuID = 16,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 71,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1937),
                            MenuID = 17,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 72,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1939),
                            MenuID = 18,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 73,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1940),
                            MenuID = 19,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 74,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1942),
                            MenuID = 20,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 75,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1944),
                            MenuID = 21,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 76,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1946),
                            MenuID = 22,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 77,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1948),
                            MenuID = 23,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 78,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1950),
                            MenuID = 24,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 79,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1952),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 80,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1954),
                            MenuID = 26,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 81,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1956),
                            MenuID = 27,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 82,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1959),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 83,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1961),
                            MenuID = 26,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 84,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1963),
                            MenuID = 27,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 85,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1965),
                            MenuID = 14,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 86,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1967),
                            MenuID = 15,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 87,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1969),
                            MenuID = 16,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 88,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1971),
                            MenuID = 18,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 89,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1973),
                            MenuID = 19,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 90,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1975),
                            MenuID = 21,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 91,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1977),
                            MenuID = 22,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 92,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1979),
                            MenuID = 23,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 93,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1981),
                            MenuID = 24,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 94,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1983),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 95,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1984),
                            MenuID = 1,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 96,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1986),
                            MenuID = 2,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 97,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1989),
                            MenuID = 3,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 98,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1992),
                            MenuID = 4,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 99,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1993),
                            MenuID = 5,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 100,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1995),
                            MenuID = 6,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 101,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(1997),
                            MenuID = 7,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 102,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2000),
                            MenuID = 8,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 103,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2001),
                            MenuID = 9,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 104,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2003),
                            MenuID = 10,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 105,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2005),
                            MenuID = 11,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 106,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2007),
                            MenuID = 12,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 107,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2009),
                            MenuID = 13,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 108,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2017),
                            MenuID = 14,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 109,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2019),
                            MenuID = 15,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 110,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2021),
                            MenuID = 16,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 111,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2024),
                            MenuID = 17,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 112,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2026),
                            MenuID = 18,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 113,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2028),
                            MenuID = 19,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 114,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2030),
                            MenuID = 20,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 115,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2031),
                            MenuID = 21,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 116,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2033),
                            MenuID = 22,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 117,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2035),
                            MenuID = 23,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 118,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2038),
                            MenuID = 24,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 119,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2040),
                            MenuID = 25,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 120,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2041),
                            MenuID = 26,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 121,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2044),
                            MenuID = 27,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 122,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2046),
                            MenuID = 28,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 123,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2048),
                            MenuID = 1,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 124,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2051),
                            MenuID = 2,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 125,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2053),
                            MenuID = 3,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 126,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2054),
                            MenuID = 4,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 127,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2057),
                            MenuID = 5,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 128,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2059),
                            MenuID = 6,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 129,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2063),
                            MenuID = 7,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 130,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2065),
                            MenuID = 8,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 131,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2067),
                            MenuID = 9,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 132,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2071),
                            MenuID = 10,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 133,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2074),
                            MenuID = 11,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 134,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2077),
                            MenuID = 12,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 135,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2080),
                            MenuID = 13,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 136,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2083),
                            MenuID = 14,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 137,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2085),
                            MenuID = 15,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 138,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2088),
                            MenuID = 16,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 139,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2090),
                            MenuID = 17,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 140,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2092),
                            MenuID = 18,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 141,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2094),
                            MenuID = 19,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 142,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2097),
                            MenuID = 20,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 143,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2099),
                            MenuID = 21,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 144,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2101),
                            MenuID = 22,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 145,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2103),
                            MenuID = 23,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 146,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2107),
                            MenuID = 24,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 147,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2109),
                            MenuID = 25,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 148,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2111),
                            MenuID = 26,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 149,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2112),
                            MenuID = 27,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 150,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2116),
                            MenuID = 28,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 151,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2119),
                            MenuID = 18,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 152,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2121),
                            MenuID = 1,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 153,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2124),
                            MenuID = 2,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 154,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2126),
                            MenuID = 3,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 155,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2129),
                            MenuID = 4,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 156,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2132),
                            MenuID = 5,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 157,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2134),
                            MenuID = 6,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 158,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2137),
                            MenuID = 7,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 159,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2142),
                            MenuID = 8,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 160,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2144),
                            MenuID = 9,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 161,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2147),
                            MenuID = 10,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 162,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2150),
                            MenuID = 11,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 163,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2152),
                            MenuID = 12,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 164,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2156),
                            MenuID = 13,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 165,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2158),
                            MenuID = 14,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 166,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2159),
                            MenuID = 15,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 167,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2161),
                            MenuID = 16,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 168,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2163),
                            MenuID = 17,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 169,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2165),
                            MenuID = 18,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 170,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2167),
                            MenuID = 19,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 171,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2169),
                            MenuID = 20,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 172,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2171),
                            MenuID = 21,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 173,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2173),
                            MenuID = 22,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 174,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2175),
                            MenuID = 23,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 175,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2177),
                            MenuID = 24,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 176,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2179),
                            MenuID = 25,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 177,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2186),
                            MenuID = 26,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 178,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2188),
                            MenuID = 27,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 180,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2190),
                            MenuID = 28,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 181,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2192),
                            MenuID = 18,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 182,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2194),
                            MenuID = 1,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 183,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2195),
                            MenuID = 2,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 184,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2197),
                            MenuID = 3,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 185,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2200),
                            MenuID = 4,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 186,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2202),
                            MenuID = 5,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 187,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2203),
                            MenuID = 6,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 188,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2205),
                            MenuID = 7,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 189,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2207),
                            MenuID = 8,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 190,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2209),
                            MenuID = 9,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 191,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2211),
                            MenuID = 10,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 192,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2214),
                            MenuID = 11,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 193,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2216),
                            MenuID = 12,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 194,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2217),
                            MenuID = 13,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 195,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2219),
                            MenuID = 14,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 196,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2221),
                            MenuID = 15,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 197,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2223),
                            MenuID = 16,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 198,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2225),
                            MenuID = 17,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 199,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2227),
                            MenuID = 18,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 200,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2229),
                            MenuID = 19,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 201,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2231),
                            MenuID = 20,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 202,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2233),
                            MenuID = 21,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 203,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2235),
                            MenuID = 22,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 204,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2237),
                            MenuID = 23,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 205,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2239),
                            MenuID = 24,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 206,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2241),
                            MenuID = 25,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 207,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2243),
                            MenuID = 26,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 208,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2245),
                            MenuID = 27,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 209,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 727, DateTimeKind.Local).AddTicks(2247),
                            MenuID = 28,
                            RoleID = 7
                        });
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuQuickLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleMenuQuickLinkID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MenuID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("QuickLinkID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.HasIndex("QuickLinkID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleMenuQuickLink");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1557),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1741),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1746),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1750),
                            MenuID = 12,
                            QuickLinkID = 4,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1753),
                            MenuID = 12,
                            QuickLinkID = 5,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1755),
                            MenuID = 12,
                            QuickLinkID = 6,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1758),
                            MenuID = 12,
                            QuickLinkID = 7,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1761),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1764),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1767),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1769),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1772),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1774),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1777),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1779),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1783),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1786),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1789),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1791),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1810),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1814),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1817),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1819),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1822),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 737, DateTimeKind.Local).AddTicks(1825),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 7
                        });
                });

            modelBuilder.Entity("Piping.Entities.StructuralMinThk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_StructuralMinThk_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnName("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OutsideDiameterInches")
                        .HasColumnName("OutsideDiameter_IN")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutsideDiameterMM")
                        .HasColumnName("OutsideDiameter_MM")
                        .HasColumnType("numeric");

                    b.Property<decimal>("StructureWallThicknessMM")
                        .HasColumnName("StructureWallThickness_MM")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_StructuralMinThk");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            ComponentType = "1/4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4556),
                            OutsideDiameterInches = 0.302m,
                            OutsideDiameterMM = 7.6708m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            ComponentType = "1/2\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4676),
                            OutsideDiameterInches = 0.84m,
                            OutsideDiameterMM = 21.336m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            ComponentType = "3/4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4681),
                            OutsideDiameterInches = 1.05m,
                            OutsideDiameterMM = 26.67m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            ComponentType = "1\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4687),
                            OutsideDiameterInches = 1.315m,
                            OutsideDiameterMM = 33.401m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            ComponentType = "1.25\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4690),
                            OutsideDiameterInches = 1.315m,
                            OutsideDiameterMM = 33.401m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            ComponentType = "1.5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4693),
                            OutsideDiameterInches = 1.9m,
                            OutsideDiameterMM = 48.26m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            ComponentType = "2\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4697),
                            OutsideDiameterInches = 2.375m,
                            OutsideDiameterMM = 60.325m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            ComponentType = "2.5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4700),
                            OutsideDiameterInches = 2.875m,
                            OutsideDiameterMM = 73.025m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            ComponentType = "3\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4703),
                            OutsideDiameterInches = 3.5m,
                            OutsideDiameterMM = 88.9m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            ComponentType = "4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4707),
                            OutsideDiameterInches = 4.5m,
                            OutsideDiameterMM = 114.3m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            ComponentType = "5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4710),
                            OutsideDiameterInches = 5.563m,
                            OutsideDiameterMM = 141.3002m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            ComponentType = "6\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4714),
                            OutsideDiameterInches = 6.625m,
                            OutsideDiameterMM = 168.275m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            ComponentType = "8\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4717),
                            OutsideDiameterInches = 8.625m,
                            OutsideDiameterMM = 219.075m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            ComponentType = "10\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4722),
                            OutsideDiameterInches = 10.75m,
                            OutsideDiameterMM = 273.05m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            ComponentType = "2050NB",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4725),
                            OutsideDiameterInches = 10.75m,
                            OutsideDiameterMM = 273.05m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            ComponentType = "12\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4728),
                            OutsideDiameterInches = 12.75m,
                            OutsideDiameterMM = 323.85m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            ComponentType = "14\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4764),
                            OutsideDiameterInches = 14m,
                            OutsideDiameterMM = 355.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            ComponentType = "16\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4768),
                            OutsideDiameterInches = 16m,
                            OutsideDiameterMM = 406.4m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            ComponentType = "18\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4771),
                            OutsideDiameterInches = 18m,
                            OutsideDiameterMM = 457.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            ComponentType = "20\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4776),
                            OutsideDiameterInches = 20m,
                            OutsideDiameterMM = 508m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            ComponentType = "24\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4779),
                            OutsideDiameterInches = 24m,
                            OutsideDiameterMM = 609.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            ComponentType = "26\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4782),
                            OutsideDiameterInches = 25.25m,
                            OutsideDiameterMM = 641.35m,
                            StructureWallThicknessMM = 4.064m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            ComponentType = "28\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4785),
                            OutsideDiameterInches = 28m,
                            OutsideDiameterMM = 711.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            ComponentType = "28\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4789),
                            OutsideDiameterInches = 28m,
                            OutsideDiameterMM = 711.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            ComponentType = "30\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4792),
                            OutsideDiameterInches = 30m,
                            OutsideDiameterMM = 762m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            ComponentType = "32\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4796),
                            OutsideDiameterInches = 32m,
                            OutsideDiameterMM = 812.8m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            ComponentType = "36\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4799),
                            OutsideDiameterInches = 36m,
                            OutsideDiameterMM = 914.4m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            ComponentType = "38\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4803),
                            OutsideDiameterInches = 37.25m,
                            OutsideDiameterMM = 946.15m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            ComponentType = "40\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4806),
                            OutsideDiameterInches = 40m,
                            OutsideDiameterMM = 1016m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            ComponentType = "42\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4809),
                            OutsideDiameterInches = 42m,
                            OutsideDiameterMM = 1066.8m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            ComponentType = "48\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4812),
                            OutsideDiameterInches = 48m,
                            OutsideDiameterMM = 1219.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            ComponentType = "54\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4815),
                            OutsideDiameterInches = 54m,
                            OutsideDiameterMM = 1371.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            ComponentType = "56\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4818),
                            OutsideDiameterInches = 55m,
                            OutsideDiameterMM = 1397m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            ComponentType = "60\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4822),
                            OutsideDiameterInches = 60m,
                            OutsideDiameterMM = 1524m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            ComponentType = "> 60\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 745, DateTimeKind.Local).AddTicks(4825),
                            OutsideDiameterInches = 102m,
                            OutsideDiameterMM = 2590.8m,
                            StructureWallThicknessMM = 3.175m
                        });
                });

            modelBuilder.Entity("Piping.Entities.TML", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TMLID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CorrosionType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("LastMeasuredDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LastMeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextInspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RemainingLife")
                        .HasColumnType("numeric");

                    b.Property<string>("ReportNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TMLNo")
                        .HasColumnType("text");

                    b.Property<int?>("YearInService")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("TML");
                });

            modelBuilder.Entity("Piping.Entities.TMLHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TMLHistoryID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CorrosionType")
                        .HasColumnName("CorrosionType")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Diameter")
                        .HasColumnName("Diameter")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal>("MeasuredThick")
                        .HasColumnName("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("NominalThick")
                        .HasColumnName("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ReportNo")
                        .HasColumnName("ReportNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TMLNo")
                        .HasColumnName("TMLNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Year")
                        .HasColumnName("Year")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("TMLHistory");
                });

            modelBuilder.Entity("Piping.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LockedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .HasColumnName("PasswordSalt")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 740, DateTimeKind.Local).AddTicks(122),
                            Email = "praveen.mondithoka@senecaglobal.com",
                            IsExpired = false,
                            IsLocked = false,
                            Password = "10000.4UHjc0+Y83AmfG8z6oLsEQ==.pA2/E7H6cE3e6028FpnZXkNjM6d18MOUuXc7tCRUilc=",
                            PasswordHash = "10000.4UHjc0+Y83AmfG8z6oLsEQ==.pA2/E7H6cE3e6028FpnZXkNjM6d18MOUuXc7tCRUilc=",
                            Username = "E0001"
                        });
                });

            modelBuilder.Entity("Piping.Entities.UserAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserAuditID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnName("ActivityType")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Occurred")
                        .HasColumnName("Occurred")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAudit");
                });

            modelBuilder.Entity("Piping.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 10, 1, 36, 49, 740, DateTimeKind.Local).AddTicks(4135),
                            RoleID = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("Piping.Entities.COFMaster", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.Department", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.Employee", b =>
                {
                    b.HasOne("Piping.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.IOW", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionConfidence", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionDistribution", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionDocument", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionObservation", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionProgram", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionRecommendation", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionStrategy", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.Menu", b =>
                {
                    b.HasOne("Piping.Entities.Menu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFEC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFIC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFODM", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFSCC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeCluster", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeClusterPOF", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeReport", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PlantMaster", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.PlantMaster", "ParentPlant")
                        .WithMany()
                        .HasForeignKey("ParentPlantID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuAction", b =>
                {
                    b.HasOne("Piping.Entities.Action", "Action")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("ActionID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.Menu", "Menu")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuQuickLink", b =>
                {
                    b.HasOne("Piping.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piping.Entities.QuickLink", "QuickLink")
                        .WithMany()
                        .HasForeignKey("QuickLinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.TML", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.User", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.UserAudit", b =>
                {
                    b.HasOne("Piping.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.UserRole", b =>
                {
                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
