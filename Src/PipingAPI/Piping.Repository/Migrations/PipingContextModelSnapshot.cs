// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Piping.Repository;

namespace Piping.Repository.Migrations
{
    [DbContext(typeof(PipingContext))]
    partial class PipingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Piping.Entities.Action", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("ActionCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("ActionName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Action");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "N",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(8991),
                            Name = "Not visible"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "V",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(9105),
                            Name = "View only"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "U",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(9111),
                            Name = "Update"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(9114),
                            Name = "Add"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(9117),
                            Name = "Complete access"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "P",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 352, DateTimeKind.Local).AddTicks(9120),
                            Name = "Print"
                        });
                });

            modelBuilder.Entity("Piping.Entities.AlertMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AlertMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailBcc")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailCc")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailContent")
                        .HasColumnType("text");

                    b.Property<string>("EmailFrom")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailSubject")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("EmailTo")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("AlertMaster");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "UC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(4454),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  User <b>[{{Username}}] </b> is created  </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - User Account Created",
                            EmailTo = "{{UserEmail}}",
                            Name = "User Creation"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "RP",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(4641),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  Password is reset to  <b>{{UserPassword}} </b>  </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - {{Username}} - Reset Password",
                            EmailTo = "{{UserEmail}}",
                            Name = "Reset Password"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "CP",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(4646),
                            EmailBcc = "",
                            EmailCc = "",
                            EmailContent = "<html>  <body>  Password is changed successfully. </body>  </html>",
                            EmailFrom = "praveen.mondithoka@senecaglobal.com",
                            EmailSubject = "{{CompanyName}} - {{Username}} - Change Password",
                            EmailTo = "{{UserEmail}}",
                            Name = "Change Password"
                        });
                });

            modelBuilder.Entity("Piping.Entities.COF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COFID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AIL_CMD_CA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AIL_PI_CA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AINL_CMD_CA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AINL_PI_CA")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AIT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Area")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AvailableMassInventory")
                        .HasColumnType("numeric");

                    b.Property<int?>("C1")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CAIL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_CA_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_CA_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CA_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CdLiquid")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CdVapour")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Detection")
                        .HasColumnType("text");

                    b.Property<decimal?>("Diameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveDensity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveReleaseRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveReleaseRateWmax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Enff")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("FactAIT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FactAITcalc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FactDI")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FactIC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FactICcalc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FactMIT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Final_CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Final_CA_pi")
                        .HasColumnType("numeric");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<int?>("FluidType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("GFFn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GFFtotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("Gc")
                        .HasColumnType("integer");

                    b.Property<decimal?>("HoleDia")
                        .HasColumnType("numeric");

                    b.Property<string>("Holes")
                        .HasColumnType("text");

                    b.Property<decimal?>("IAIL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_CA_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_CA_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_CA_pi")
                        .HasColumnType("numeric");

                    b.Property<string>("IgnitionSourceNearBy")
                        .HasColumnType("text");

                    b.Property<string>("Isolation")
                        .HasColumnType("text");

                    b.Property<decimal?>("K")
                        .HasColumnType("numeric");

                    b.Property<int?>("Kv")
                        .HasColumnType("integer");

                    b.Property<decimal?>("LDn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Length")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LiquidDensity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LiquidReleaseRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LiquidReleaseRateLDmax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MW")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassAdd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassAvailable")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassComp")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassCompPlusMassAdd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassInventory")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Massn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Max60XLD")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxAreaWmax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxDiaWmax")
                        .HasColumnType("numeric");

                    b.Property<string>("Mitigation")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("OpPr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpPrPlus101")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpTemp")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PPtrans")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Patm")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Ptrans")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Raten")
                        .HasColumnType("numeric");

                    b.Property<string>("ReferenceFluid")
                        .HasColumnType("text");

                    b.Property<string>("ReleaseModel")
                        .HasColumnType("text");

                    b.Property<string>("ReleaseState")
                        .HasColumnType("text");

                    b.Property<string>("ReleaseType")
                        .HasColumnType("text");

                    b.Property<string>("StoredStage")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Tn")
                        .HasColumnType("numeric");

                    b.Property<string>("ToxicFluid")
                        .HasColumnType("text");

                    b.Property<decimal?>("ToxicPercentage")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Ts")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TsMinus55")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TsPlus55")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("VapourDensity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("VapourReleaseRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("VapourReleaseRateWmax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Wn1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Wn1Wmax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Wn2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Wn2Wmax")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("COF");
                });

            modelBuilder.Entity("Piping.Entities.COFFluid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COFFluidID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("CAIL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAIL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CAINL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Fluid")
                        .HasColumnType("text");

                    b.Property<string>("FluidModel")
                        .HasColumnType("text");

                    b.Property<decimal?>("IAIL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAIL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_A_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_A_pi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_B_cmd")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IAINL_B_pi")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_COFFluid");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CAIL_A_cmd = 55.13m,
                            CAIL_A_pi = 143.2m,
                            CAIL_B_cmd = 0.95m,
                            CAIL_B_pi = 0.92m,
                            CAINL_A_cmd = 8.669m,
                            CAINL_A_pi = 21.83m,
                            CAINL_B_cmd = 0.98m,
                            CAINL_B_pi = 0.96m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 389, DateTimeKind.Local).AddTicks(9883),
                            Fluid = "C1-C2",
                            FluidModel = "Gas",
                            IAIL_A_cmd = 163.7m,
                            IAIL_A_pi = 473.9m,
                            IAIL_B_cmd = 0.62m,
                            IAIL_B_pi = 0.63m,
                            IAINL_A_cmd = 6.469m,
                            IAINL_A_pi = 12.46m,
                            IAINL_B_cmd = 0.67m,
                            IAINL_B_pi = 0.67m
                        },
                        new
                        {
                            ID = 2,
                            CAIL_A_cmd = 0m,
                            CAIL_A_pi = 0m,
                            CAIL_B_cmd = 0m,
                            CAIL_B_pi = 0m,
                            CAINL_A_cmd = 0m,
                            CAINL_A_pi = 0m,
                            CAINL_B_cmd = 0m,
                            CAINL_B_pi = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(212),
                            Fluid = "C1-C2",
                            FluidModel = "Liquid",
                            IAIL_A_cmd = 0m,
                            IAIL_A_pi = 0m,
                            IAIL_B_cmd = 0m,
                            IAIL_B_pi = 0m,
                            IAINL_A_cmd = 0m,
                            IAINL_A_pi = 0m,
                            IAINL_B_cmd = 0m,
                            IAINL_B_pi = 0m
                        },
                        new
                        {
                            ID = 3,
                            CAIL_A_cmd = 0m,
                            CAIL_A_pi = 0m,
                            CAIL_B_cmd = 0m,
                            CAIL_B_pi = 0m,
                            CAINL_A_cmd = 0m,
                            CAINL_A_pi = 0m,
                            CAINL_B_cmd = 0m,
                            CAINL_B_pi = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(220),
                            Fluid = "C3-C4",
                            FluidModel = "Gas",
                            IAIL_A_cmd = 0m,
                            IAIL_A_pi = 0m,
                            IAIL_B_cmd = 0m,
                            IAIL_B_pi = 0m,
                            IAINL_A_cmd = 0m,
                            IAINL_A_pi = 0m,
                            IAINL_B_cmd = 0m,
                            IAINL_B_pi = 0m
                        },
                        new
                        {
                            ID = 4,
                            CAIL_A_cmd = 0m,
                            CAIL_A_pi = 0m,
                            CAIL_B_cmd = 0m,
                            CAIL_B_pi = 0m,
                            CAINL_A_cmd = 0m,
                            CAINL_A_pi = 0m,
                            CAINL_B_cmd = 0m,
                            CAINL_B_pi = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(228),
                            Fluid = "Ammonia",
                            FluidModel = "Gas",
                            IAIL_A_cmd = 0m,
                            IAIL_A_pi = 0m,
                            IAIL_B_cmd = 0m,
                            IAIL_B_pi = 0m,
                            IAINL_A_cmd = 0m,
                            IAINL_A_pi = 0m,
                            IAINL_B_cmd = 0m,
                            IAINL_B_pi = 0m
                        });
                });

            modelBuilder.Entity("Piping.Entities.COFIC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COFIC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("FactIC")
                        .HasColumnType("numeric");

                    b.Property<string>("FluidType")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReleaseType")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_COFIC");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(3224),
                            FactIC = 1m,
                            FluidType = "Type 0",
                            ReleaseType = "CONTINUOUS"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(3320),
                            FactIC = 1m,
                            FluidType = "Type 0",
                            ReleaseType = "INSTANTANEOUS"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(3323),
                            FactIC = 0m,
                            FluidType = "Type 1",
                            ReleaseType = "CONTINUOUS"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(3326),
                            FactIC = 1m,
                            FluidType = "Type 1",
                            ReleaseType = "INSTANTANEOUS"
                        });
                });

            modelBuilder.Entity("Piping.Entities.COFMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COFMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DetectionRating")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Flammable")
                        .HasColumnName("Flammable")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FluidPhaseStored")
                        .HasColumnType("text");

                    b.Property<string>("IsolationRating")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("MitigationFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Other")
                        .HasColumnName("Other")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Overall")
                        .HasColumnName("Overall")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Production")
                        .HasColumnName("Production")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RefresentativeFluid")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Toxic")
                        .HasColumnName("Toxic")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("ToxicFluidFraction")
                        .HasColumnType("numeric");

                    b.Property<string>("ToxicReferenceFluid")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("COFMaster");
                });

            modelBuilder.Entity("Piping.Entities.COP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_COP_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("A")
                        .HasColumnName("A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("B")
                        .HasColumnName("B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("C")
                        .HasColumnName("C")
                        .HasColumnType("numeric");

                    b.Property<int>("COP_LEVEL")
                        .HasColumnName("COP_LEVEL")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("D")
                        .HasColumnName("D")
                        .HasColumnType("numeric");

                    b.Property<decimal>("E")
                        .HasColumnName("E")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("TBL_COP");
                });

            modelBuilder.Entity("Piping.Entities.CUICorrosionRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_CUICorrosionRate_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CorrosionRate")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_CUICorrosionRate");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6808),
                            Driver = "M",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6914),
                            Driver = "T",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6918),
                            Driver = "D",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6921),
                            Driver = "S",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6924),
                            Driver = "M",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6927),
                            Driver = "T",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6930),
                            Driver = "D",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6933),
                            Driver = "S",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6937),
                            Driver = "M",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6940),
                            Driver = "T",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6943),
                            Driver = "D",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6946),
                            Driver = "S",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6951),
                            Driver = "M",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6954),
                            Driver = "T",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6958),
                            Driver = "D",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6961),
                            Driver = "S",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6964),
                            Driver = "M",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6966),
                            Driver = "T",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6972),
                            Driver = "D",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CorrosionRate = 0.508m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6974),
                            Driver = "S",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6978),
                            Driver = "M",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6981),
                            Driver = "T",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6984),
                            Driver = "D",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6987),
                            Driver = "S",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6991),
                            Driver = "M",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6993),
                            Driver = "T",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(6996),
                            Driver = "D",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7000),
                            Driver = "S",
                            OperatingTemperatureInDegC = 135m
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7002),
                            Driver = "M",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7005),
                            Driver = "T",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7011),
                            Driver = "D",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7015),
                            Driver = "S",
                            OperatingTemperatureInDegC = 162m
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7033),
                            Driver = "M",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7037),
                            Driver = "T",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7041),
                            Driver = "D",
                            OperatingTemperatureInDegC = 176m
                        },
                        new
                        {
                            ID = 36,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(7044),
                            Driver = "S",
                            OperatingTemperatureInDegC = 176m
                        });
                });

            modelBuilder.Entity("Piping.Entities.CUISuceptability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_CUISuceptability_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC_From")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OperatingTemperatureInDegC_To")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_From")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_To")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_CUISuceptability");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4543),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4657),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4662),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4665),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4668),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4671),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4674),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4678),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4680),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4685),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4688),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4691),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4694),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4696),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4700),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(4705),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("CompanyCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("LogoContent")
                        .HasColumnName("LogoContent")
                        .HasColumnType("bytea");

                    b.Property<string>("LogoName")
                        .HasColumnName("LogoName")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("CompanyName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Website")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Address = "",
                            Code = "OGC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(9009),
                            Email = "",
                            LogoName = "Logo.png",
                            Name = "OIL & GAS",
                            Phone = "",
                            Website = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.CorrosionStudy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("FluidName")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<string>("ProcessDescription")
                        .HasColumnType("text");

                    b.Property<string>("SubFluidCode")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("CorrosionStudy");
                });

            modelBuilder.Entity("Piping.Entities.DMGuide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DMGuideID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("DMDescription")
                        .HasColumnType("text");

                    b.Property<string>("DMGuideDocument")
                        .HasColumnType("text");

                    b.Property<string>("DMRate")
                        .HasColumnType("text");

                    b.Property<string>("DMSeverity")
                        .HasColumnType("text");

                    b.Property<string>("DMSuceptability")
                        .HasColumnType("text");

                    b.Property<string>("DMType")
                        .HasColumnType("text");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("FluidName")
                        .HasColumnType("text");

                    b.Property<string>("HigherRange")
                        .HasColumnType("text");

                    b.Property<string>("LowerRange")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PWHT")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SpecialCondition")
                        .HasColumnType("text");

                    b.Property<string>("SubFluid")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DMGuide");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(7962),
                            DMCode = "IC",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "Natural Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8140),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Mixed Feed",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8145),
                            DMCode = "Erosion",
                            DMDescription = "Erosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Mixed Feed",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "At Steam Injection area",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8150),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Primary Reformed Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8152),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8155),
                            DMCode = "Under deposit corrosion",
                            DMDescription = "Under deposit corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Convection coil combustion air pre heater cold side",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8158),
                            DMCode = "Condensation Internal corrosion",
                            DMDescription = "Condensation Internal corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Process Air",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Process air interstage coolers and lines",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8160),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Secondary Reforming",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 9,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8163),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "CO-CONVERSION",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 10,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8165),
                            DMCode = "Condensation Internal corrosion",
                            DMDescription = "Condensation Internal corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "CO-CONVERSION",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "If condensation possible",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 11,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8168),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 12,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8171),
                            DMCode = "Erosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "High erosion possible on local areas if vel >2 m/s",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 13,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8174),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.03",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 14,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8176),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 15,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8179),
                            DMCode = "General Internal corrosion",
                            DMDescription = "CO2 Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 16,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8182),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Methanated Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 17,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8184),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Synthesis Gas Compressor",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 18,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8187),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Synthesis Loop",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 19,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8190),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 20,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8192),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 21,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8195),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0",
                            DMType = "IC",
                            FluidName = "Purge Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 22,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8198),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "Amm Recovery",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Alchaline corrosion due to higher Ammonia",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 23,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8201),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "BF Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 24,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8204),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Condensate",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 25,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8206),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "HP Steam",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 26,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8209),
                            DMCode = "Under deposit corrosion",
                            DMDescription = "Under deposit corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "HP Steam",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "Tubes in vertical exchangers like waste heat boiler",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 27,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8212),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "LP/MP Steam",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 28,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8252),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "DM Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 29,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8256),
                            DMCode = "Micro biological corrosion",
                            DMDescription = "Micro biological corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "DM Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "generally happened with few years of commissioning.",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 30,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8258),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Process Condensate",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 31,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8261),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.5",
                            DMType = "IC",
                            FluidName = "Sea Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Depends on coating/lining condition",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 32,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8264),
                            DMCode = "General Internal corrosion",
                            DMDescription = "General Internal corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Closed Cooling Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 33,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8267),
                            DMCode = "Micro biological corrosion",
                            DMDescription = "Micro biological corrosion",
                            DMRate = "0.2",
                            DMType = "IC",
                            FluidName = "Closed Cooling Water",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "In case of improper treatment",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 34,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8269),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-RICH"
                        },
                        new
                        {
                            ID = 35,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8272),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Semi lean"
                        },
                        new
                        {
                            ID = 36,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8274),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "Benfield Solution",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Lean"
                        },
                        new
                        {
                            ID = 37,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8276),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Wet CO2 corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 38,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8279),
                            DMCode = "Wet CO2 corrosion",
                            DMDescription = "Wet CO2 corrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 39,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8281),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Atmospheric Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "Atmosphere",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 40,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8284),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-RICH"
                        },
                        new
                        {
                            ID = 41,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8287),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Semi lean"
                        },
                        new
                        {
                            ID = 42,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8290),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.02",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "H2S-Lean"
                        },
                        new
                        {
                            ID = 43,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8292),
                            DMCode = "General Internal corrosion",
                            DMDescription = "Flue Gas Corrosion",
                            DMRate = "0.01",
                            DMType = "IC",
                            FluidName = "Convection Coils- External",
                            MaterialCode = "All",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 44,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8295),
                            DMCode = "General Internal corrosion",
                            DMDescription = "CO2 Corrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "CO2-RICH AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 45,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8297),
                            DMCode = "Erosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.1",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "High erosion possible on local areas if vel >2 m/s",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 46,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8303),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.03",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 47,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8305),
                            DMCode = "General Internal corrosion",
                            DMDescription = "AMINE COrrosion",
                            DMRate = "0.05",
                            DMType = "IC",
                            FluidName = "MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 48,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8308),
                            DMCode = "Wet H2S Cracking",
                            DMDescription = "Wet H2S Cracking",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Natural Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "See the charts",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 49,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8310),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-RICH AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Rich"
                        },
                        new
                        {
                            ID = 50,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8313),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-LEAN"
                        },
                        new
                        {
                            ID = 51,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8316),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-SEMI LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = "CO2-Semi Lean"
                        },
                        new
                        {
                            ID = 52,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8319),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 53,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8321),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Methanated Gas",
                            MaterialCode = "CS/LAS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 54,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8324),
                            DMCode = "SCC-Amm",
                            DMDescription = "SCC-Amm",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 55,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8326),
                            DMCode = "SCC-Amm",
                            DMDescription = "SCC-Amm",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Ammonia Processing",
                            MaterialCode = "CS/LTCS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 56,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8329),
                            DMCode = "Corr-Fatigue",
                            DMDescription = "Corr-Fatigue",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Purge Gas",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Non PWHT ",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 57,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8331),
                            DMCode = "SCC-Alkhaline",
                            DMDescription = "SCC-Alkhaline",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "Amm Recovery",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "Alchaline corrosion due to higher Ammonia",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 58,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8334),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S-RICH AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 59,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8336),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S-SEMI LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 60,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8339),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S- LEAN AMINE-BS",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 61,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8342),
                            DMCode = "West H2S Cracking",
                            DMDescription = "West H2S Cracking",
                            DMRate = "MED",
                            DMType = "SCC",
                            FluidName = "H2S + CO2",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 62,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8344),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "H2S-RICH AMINE-MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "PWHT is required",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 63,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8347),
                            DMCode = "AMINE cracking",
                            DMDescription = "AMINE cracking",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "H2S-SEMI LEAN AMINE-MDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "PWHT is required",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 64,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8350),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-RICH AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 65,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8353),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-LEAN AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        },
                        new
                        {
                            ID = 66,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 385, DateTimeKind.Local).AddTicks(8358),
                            DMCode = "Carbonate SCC",
                            DMDescription = "Carbonate SCC",
                            DMRate = "LOW",
                            DMType = "SCC",
                            FluidName = "CO2-SEMI LEAN AMINE-aMDEA",
                            MaterialCode = "CS",
                            Source = "Ammonia",
                            SpecialCondition = "",
                            SubFluid = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.DMMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DMMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<decimal?>("Frequency")
                        .HasColumnType("numeric");

                    b.Property<string>("Interval")
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DMMaster");
                });

            modelBuilder.Entity("Piping.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DepartmentID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("DepartmentCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("DepartmentName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "QLT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 370, DateTimeKind.Local).AddTicks(2448),
                            Name = "Quality"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "PRD",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 370, DateTimeKind.Local).AddTicks(2664),
                            Name = "Production"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "OPR",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 370, DateTimeKind.Local).AddTicks(2679),
                            Name = "Operation"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "MNT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 370, DateTimeKind.Local).AddTicks(2682),
                            Name = "Maintenance"
                        });
                });

            modelBuilder.Entity("Piping.Entities.DetectionIsolation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DetectionIsolationID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DetectionRating")
                        .HasColumnType("text");

                    b.Property<decimal?>("FactDI")
                        .HasColumnType("numeric");

                    b.Property<string>("IsolationRating")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_DetectionIsolation");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(804),
                            DetectionRating = "A",
                            FactDI = 0.25m,
                            IsolationRating = "A"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(899),
                            DetectionRating = "A",
                            FactDI = 0.2m,
                            IsolationRating = "B"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(904),
                            DetectionRating = "A",
                            FactDI = 0.1m,
                            IsolationRating = "C"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(907),
                            DetectionRating = "B",
                            FactDI = 0.15m,
                            IsolationRating = "A"
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(910),
                            DetectionRating = "B",
                            FactDI = 0.15m,
                            IsolationRating = "B"
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(913),
                            DetectionRating = "B",
                            FactDI = 0.1m,
                            IsolationRating = "C"
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(917),
                            DetectionRating = "C",
                            FactDI = 0m,
                            IsolationRating = "A"
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(921),
                            DetectionRating = "C",
                            FactDI = 0m,
                            IsolationRating = "B"
                        },
                        new
                        {
                            ID = 9,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(924),
                            DetectionRating = "C",
                            FactDI = 0m,
                            IsolationRating = "C"
                        });
                });

            modelBuilder.Entity("Piping.Entities.DocumentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocumentMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Content")
                        .HasColumnName("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DocumentNo")
                        .IsRequired()
                        .HasColumnName("DocumentNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnName("DocumentType")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("FileName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnName("Format")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnName("ReferenceNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("DocumentMaster");
                });

            modelBuilder.Entity("Piping.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Address")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOB")
                        .HasColumnName("DOB")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOJ")
                        .HasColumnName("DOJ")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DOR")
                        .HasColumnName("DOR")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmentID")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("integer");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnName("EmployeeNo")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnName("Gender")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Phone")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("PhotoContent")
                        .HasColumnName("PhotoContent")
                        .HasColumnType("bytea");

                    b.Property<string>("PhotoName")
                        .HasColumnName("PhotoName")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 370, DateTimeKind.Local).AddTicks(8677),
                            DepartmentID = 1,
                            Designation = "AssetIntegritySpecialist",
                            Email = "",
                            EmployeeNo = "E0001",
                            EmployeeType = "Permanent",
                            FirstName = "GIRIDHARA",
                            Gender = "M",
                            LastName = "DATLA",
                            Phone = "",
                            PhotoName = "Photo.png"
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalCorrosionRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalCorrosionRate_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CorrosionRate")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalCorrosionRate");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3711),
                            Driver = "M",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3823),
                            Driver = "T",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3827),
                            Driver = "D",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3830),
                            Driver = "S",
                            OperatingTemperatureInDegC = -12m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3834),
                            Driver = "M",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3837),
                            Driver = "T",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3840),
                            Driver = "D",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3842),
                            Driver = "S",
                            OperatingTemperatureInDegC = -8m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3863),
                            Driver = "M",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3866),
                            Driver = "T",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3869),
                            Driver = "D",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3871),
                            Driver = "S",
                            OperatingTemperatureInDegC = 6m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3874),
                            Driver = "M",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CorrosionRate = 0.076m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3876),
                            Driver = "T",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3880),
                            Driver = "D",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3884),
                            Driver = "S",
                            OperatingTemperatureInDegC = 32m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CorrosionRate = 0.127m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3888),
                            Driver = "M",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3891),
                            Driver = "T",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3895),
                            Driver = "D",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CorrosionRate = 0.254m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3897),
                            Driver = "S",
                            OperatingTemperatureInDegC = 71m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CorrosionRate = 0.025m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3901),
                            Driver = "M",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3904),
                            Driver = "T",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3907),
                            Driver = "D",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CorrosionRate = 0.051m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3910),
                            Driver = "S",
                            OperatingTemperatureInDegC = 107m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3913),
                            Driver = "M",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3916),
                            Driver = "T",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3920),
                            Driver = "D",
                            OperatingTemperatureInDegC = 121m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            CorrosionRate = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 383, DateTimeKind.Local).AddTicks(3927),
                            Driver = "S",
                            OperatingTemperatureInDegC = 121m
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalSeverityIndex", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalSeverityIndex_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("SeverityIndex")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalSeverityIndex");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(7178),
                            SeverityIndex = 50m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(7344),
                            SeverityIndex = 10m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(7363),
                            SeverityIndex = 1m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(7368),
                            SeverityIndex = 0m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.ExternalSuceptability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_ExternalSuceptability_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Driver")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OperatingTemperatureInDegC_From")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OperatingTemperatureInDegC_To")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_From")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperatureInDegF_To")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_ExternalSuceptability");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(622),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(751),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(758),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(761),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = -99999m,
                            OperatingTemperatureInDegC_To = 49m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(766),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(769),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(772),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(776),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 49m,
                            OperatingTemperatureInDegC_To = 93m,
                            Suceptability = "H"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(780),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(783),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "L"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(786),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(790),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 93m,
                            OperatingTemperatureInDegC_To = 149m,
                            Suceptability = "M"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(793),
                            Driver = "M",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(796),
                            Driver = "T",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(801),
                            Driver = "D",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(806),
                            Driver = "S",
                            OperatingTemperatureInDegC_From = 149m,
                            OperatingTemperatureInDegC_To = 99999m,
                            Suceptability = "N"
                        });
                });

            modelBuilder.Entity("Piping.Entities.FluidAttribute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FluidAttributeID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Fluid")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RepresentFluid")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_FluidAttribute");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(8831),
                            DisplayOrder = 1,
                            Fluid = "Natural Gas",
                            RepresentFluid = "C1-C2"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(8938),
                            DisplayOrder = 2,
                            Fluid = "Methane",
                            RepresentFluid = "C3-C4"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(8945),
                            DisplayOrder = 3,
                            Fluid = "Hydrogen",
                            RepresentFluid = "H2"
                        });
                });

            modelBuilder.Entity("Piping.Entities.FluidPhase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FluidPhaseID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FluidModel")
                        .HasColumnType("text");

                    b.Property<string>("FluidReleasePhase")
                        .HasColumnType("text");

                    b.Property<string>("FluidStoredPhase")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NBP")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_FluidPhase");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(5697),
                            FluidModel = "Gas",
                            FluidReleasePhase = "Gas",
                            FluidStoredPhase = "Gas",
                            NBP = ""
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(5846),
                            FluidModel = "Gas",
                            FluidReleasePhase = "Liquid",
                            FluidStoredPhase = "Gas",
                            NBP = ""
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(5853),
                            FluidModel = "Gas",
                            FluidReleasePhase = "Gas",
                            FluidStoredPhase = "Liquid",
                            NBP = "<=27"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(5859),
                            FluidModel = "Liquid",
                            FluidReleasePhase = "Gas",
                            FluidStoredPhase = "Liquid",
                            NBP = ">27"
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(5865),
                            FluidModel = "Liquid",
                            FluidReleasePhase = "Liquid",
                            FluidStoredPhase = "Liquid",
                            NBP = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.FluidReference", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FluidReferenceID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AIT")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Flammable")
                        .HasColumnType("text");

                    b.Property<string>("FluidReleasePhase")
                        .HasColumnType("text");

                    b.Property<string>("FluidType")
                        .HasColumnType("text");

                    b.Property<decimal?>("K")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LiquidDensity")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("MolecularWeight")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NBP")
                        .HasColumnType("numeric");

                    b.Property<string>("NFNT")
                        .HasColumnType("text");

                    b.Property<string>("RepresentativeFluid")
                        .HasColumnType("text");

                    b.Property<decimal?>("SpecificHeatCapacityRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Toxic")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("MST_FluidReference");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AIT = 558m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 388, DateTimeKind.Local).AddTicks(7708),
                            DisplayOrder = 1,
                            Flammable = "Y",
                            FluidReleasePhase = "Gas",
                            FluidType = "TYPE 0",
                            K = 1.3m,
                            LiquidDensity = 250.512m,
                            MolecularWeight = 23m,
                            NBP = -125m,
                            NFNT = "N",
                            RepresentativeFluid = "C1-C2",
                            SpecificHeatCapacityRatio = 1.1m,
                            Toxic = "N"
                        },
                        new
                        {
                            ID = 2,
                            AIT = 369m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 388, DateTimeKind.Local).AddTicks(7957),
                            DisplayOrder = 2,
                            Flammable = "Y",
                            FluidReleasePhase = "Gas",
                            FluidType = "TYPE 0",
                            K = 1.1m,
                            LiquidDensity = 538.379m,
                            MolecularWeight = 51m,
                            NBP = -21m,
                            NFNT = "N",
                            RepresentativeFluid = "C3-C4",
                            SpecificHeatCapacityRatio = 1.05m,
                            Toxic = "N"
                        },
                        new
                        {
                            ID = 3,
                            AIT = 400m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 388, DateTimeKind.Local).AddTicks(7967),
                            DisplayOrder = 3,
                            Flammable = "Y",
                            FluidReleasePhase = "Gas",
                            FluidType = "TYPE 0",
                            K = 1.2m,
                            LiquidDensity = 71.012m,
                            MolecularWeight = 2m,
                            NBP = -253m,
                            NFNT = "N",
                            RepresentativeFluid = "H2",
                            SpecificHeatCapacityRatio = 1.38m,
                            Toxic = "N"
                        },
                        new
                        {
                            ID = 4,
                            AIT = 0m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 388, DateTimeKind.Local).AddTicks(8010),
                            DisplayOrder = 4,
                            Flammable = "N",
                            FluidReleasePhase = "Gas",
                            FluidType = "TYPE 0",
                            K = 1.3m,
                            LiquidDensity = 0m,
                            MolecularWeight = 0m,
                            NBP = 0m,
                            NFNT = "N",
                            RepresentativeFluid = "Ammonia",
                            SpecificHeatCapacityRatio = 0m,
                            Toxic = "Y"
                        });
                });

            modelBuilder.Entity("Piping.Entities.GFF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GFF_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ComponentDiameterFrom")
                        .HasColumnType("integer");

                    b.Property<int?>("ComponentDiameterTo")
                        .HasColumnType("integer");

                    b.Property<string>("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("Gff1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Gff2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Gff3")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Gff4")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GffTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_GFF");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ComponentDiameterFrom = 400,
                            ComponentDiameterTo = 9999,
                            ComponentType = "PIPE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(8327),
                            Gff1 = 0m,
                            Gff2 = 0m,
                            Gff3 = 0m,
                            Gff4 = 0m,
                            GffTotal = 0m
                        },
                        new
                        {
                            ID = 2,
                            ComponentDiameterFrom = 300,
                            ComponentDiameterTo = 400,
                            ComponentType = "PIPE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(8490),
                            Gff1 = 0m,
                            Gff2 = 0m,
                            Gff3 = 0m,
                            Gff4 = 0m,
                            GffTotal = 0m
                        });
                });

            modelBuilder.Entity("Piping.Entities.IOW", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IOWID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IOWNo")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<string>("Max")
                        .HasColumnType("text");

                    b.Property<string>("Min")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Parameter")
                        .HasColumnType("text");

                    b.Property<string>("RelatedUnitNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TagNo")
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("IOW");
                });

            modelBuilder.Entity("Piping.Entities.InspectionConfidence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionConfidenceID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CMLNo")
                        .HasColumnType("text");

                    b.Property<string>("ConfidenceLevel")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DamageMechanism")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<int?>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("InspectionProgram")
                        .HasColumnType("text");

                    b.Property<int?>("LastInspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NDTMethod")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionConfidence");
                });

            modelBuilder.Entity("Piping.Entities.InspectionDistribution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionDistributionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DistributionBy")
                        .HasColumnType("text");

                    b.Property<string>("DistributionCode")
                        .HasColumnType("text");

                    b.Property<string>("DistributionStatus")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Occurred")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionDistribution");
                });

            modelBuilder.Entity("Piping.Entities.InspectionDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionDocumentID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocumentType")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("FileFormat")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("FileSize")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasMaxLength(25);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionDocument");
                });

            modelBuilder.Entity("Piping.Entities.InspectionObservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionObservationID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionObservation");
                });

            modelBuilder.Entity("Piping.Entities.InspectionProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionProgramID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Program")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionProgram");
                });

            modelBuilder.Entity("Piping.Entities.InspectionRecommendation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionRecommendationID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ActionCategory")
                        .HasColumnType("text");

                    b.Property<string>("ActionNo")
                        .HasColumnType("text");

                    b.Property<string>("ActionUpdateDate")
                        .HasColumnType("text");

                    b.Property<string>("CommentByActionTaker")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedTargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("RecommendedAction")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("Responsible")
                        .HasColumnType("text");

                    b.Property<string>("SerialNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WONumber")
                        .HasColumnType("text");

                    b.Property<string>("WOStatus")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionRecommendation");
                });

            modelBuilder.Entity("Piping.Entities.InspectionStrategy", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("InspectionStrategyID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("Frequency")
                        .HasColumnType("text");

                    b.Property<int?>("InspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NDTMethod")
                        .HasColumnType("text");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("RecommendedAction")
                        .HasColumnType("text");

                    b.Property<string>("ReportNo")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("InspectionStrategy");
                });

            modelBuilder.Entity("Piping.Entities.InsulationType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_InsulationType_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<decimal>("AdjustmentFactor")
                        .HasColumnName("AdjustmentFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_InsulationType");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3232),
                            Name = "Unknown/Unspecified"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            AdjustmentFactor = 0.75m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3343),
                            Name = "Foamglass"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            AdjustmentFactor = 1m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3347),
                            Name = "Pearlite"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3350),
                            Name = "Fiberglass"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3353),
                            Name = "Mineral Wool"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3355),
                            Name = "Calcium Silicate"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            AdjustmentFactor = 1.25m,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 380, DateTimeKind.Local).AddTicks(3358),
                            Name = "Asbestos"
                        });
                });

            modelBuilder.Entity("Piping.Entities.LDMax", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LDMaxID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("D1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("D2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("D3")
                        .HasColumnType("numeric");

                    b.Property<string>("DetectionRating")
                        .HasColumnType("text");

                    b.Property<string>("IsolationRating")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("ReductionFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_LDMax");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7504),
                            D1 = 20m,
                            D2 = 10m,
                            D3 = 5m,
                            DetectionRating = "A",
                            IsolationRating = "A",
                            ReductionFactor = 0.25m
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7630),
                            D1 = 30m,
                            D2 = 20m,
                            D3 = 10m,
                            DetectionRating = "A",
                            IsolationRating = "B",
                            ReductionFactor = 0.2m
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7636),
                            D1 = 40m,
                            D2 = 30m,
                            D3 = 20m,
                            DetectionRating = "A",
                            IsolationRating = "C",
                            ReductionFactor = 0.1m
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7640),
                            D1 = 40m,
                            D2 = 30m,
                            D3 = 20m,
                            DetectionRating = "B",
                            IsolationRating = "A",
                            ReductionFactor = 0.15m
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7643),
                            D1 = 40m,
                            D2 = 30m,
                            D3 = 20m,
                            DetectionRating = "B",
                            IsolationRating = "B",
                            ReductionFactor = 0.15m
                        },
                        new
                        {
                            ID = 6,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7647),
                            D1 = 60m,
                            D2 = 30m,
                            D3 = 20m,
                            DetectionRating = "B",
                            IsolationRating = "C",
                            ReductionFactor = 0.1m
                        },
                        new
                        {
                            ID = 7,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7653),
                            D1 = 60m,
                            D2 = 40m,
                            D3 = 20m,
                            DetectionRating = "C",
                            IsolationRating = "A",
                            ReductionFactor = 0m
                        },
                        new
                        {
                            ID = 8,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7658),
                            D1 = 60m,
                            D2 = 40m,
                            D3 = 20m,
                            DetectionRating = "C",
                            IsolationRating = "B",
                            ReductionFactor = 0m
                        },
                        new
                        {
                            ID = 9,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 390, DateTimeKind.Local).AddTicks(7662),
                            D1 = 60m,
                            D2 = 40m,
                            D3 = 20m,
                            DetectionRating = "C",
                            IsolationRating = "C",
                            ReductionFactor = 0m
                        });
                });

            modelBuilder.Entity("Piping.Entities.MaterialCodes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_MaterialCodes_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .HasColumnName("MaterialCode")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("MaterialName")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_MaterialCodes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "CS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9370),
                            Name = "CS"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "LAS-P1",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9486),
                            Name = "LAS-P1"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "LAS-P11",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9489),
                            Name = "LAS-P11"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "LAS-P12",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9492),
                            Name = "LAS-P12"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "LAS-P22",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9494),
                            Name = "LAS-P22"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "LAS-P5",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9496),
                            Name = "LAS-P5"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "LAS-P91",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9500),
                            Name = "LAS-P91"
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "SS-300",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9503),
                            Name = "SS-300"
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "SS-400",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9505),
                            Name = "SS-400"
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "SS-Aus",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9507),
                            Name = "SS-Aus"
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "SS-SDup",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9510),
                            Name = "SS-SDup"
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "SS-Dup",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9512),
                            Name = "SS-Dup"
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "NBA-800",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9513),
                            Name = "NBA-800"
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "NBA-600",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 382, DateTimeKind.Local).AddTicks(9515),
                            Name = "NBA-600"
                        });
                });

            modelBuilder.Entity("Piping.Entities.MaterialMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_MATERIAL_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DTEMP_UPTO_1001_UPTO_1025")
                        .HasColumnName("DTEMP_UPTO_1001_UPTO_1025")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_101_UPTO_125")
                        .HasColumnName("DTEMP_UPTO_101_UPTO_125")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1026_UPTO_1050")
                        .HasColumnName("DTEMP_UPTO_1026_UPTO_1050")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1051_UPTO_1075")
                        .HasColumnName("DTEMP_UPTO_1051_UPTO_1075")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_1076_UPTO_1100")
                        .HasColumnName("DTEMP_UPTO_1076_UPTO_1100")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_126_UPTO_150")
                        .HasColumnName("DTEMP_UPTO_126_UPTO_150")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_151_UPTO_175")
                        .HasColumnName("DTEMP_UPTO_151_UPTO_175")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_176_UPTO_200")
                        .HasColumnName("DTEMP_UPTO_176_UPTO_200")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_201_UPTO_225")
                        .HasColumnName("DTEMP_UPTO_201_UPTO_225")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_226_UPTO_250")
                        .HasColumnName("DTEMP_UPTO_226_UPTO_250")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_251_UPTO_275")
                        .HasColumnName("DTEMP_UPTO_251_UPTO_275")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_276_UPTO_300")
                        .HasColumnName("DTEMP_UPTO_276_UPTO_300")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_301_UPTO_325")
                        .HasColumnName("DTEMP_UPTO_301_UPTO_325")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_326_UPTO_350")
                        .HasColumnName("DTEMP_UPTO_326_UPTO_350")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_351_UPTO_375")
                        .HasColumnName("DTEMP_UPTO_351_UPTO_375")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_376_UPTO_400")
                        .HasColumnName("DTEMP_UPTO_376_UPTO_400")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_40")
                        .HasColumnName("DTEMP_UPTO_40")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_401_UPTO_425")
                        .HasColumnName("DTEMP_UPTO_401_UPTO_425")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_41_UPTO_65")
                        .HasColumnName("DTEMP_UPTO_41_UPTO_65")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_426_UPTO_450")
                        .HasColumnName("DTEMP_UPTO_426_UPTO_450")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_451_UPTO_475")
                        .HasColumnName("DTEMP_UPTO_451_UPTO_475")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_476_UPTO_500")
                        .HasColumnName("DTEMP_UPTO_476_UPTO_500")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_501_UPTO_525")
                        .HasColumnName("DTEMP_UPTO_501_UPTO_525")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_526_UPTO_550")
                        .HasColumnName("DTEMP_UPTO_526_UPTO_550")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_551_UPTO_575")
                        .HasColumnName("DTEMP_UPTO_551_UPTO_575")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_576_UPTO_600")
                        .HasColumnName("DTEMP_UPTO_576_UPTO_600")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_601_UPTO_625")
                        .HasColumnName("DTEMP_UPTO_601_UPTO_625")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_626_UPTO_650")
                        .HasColumnName("DTEMP_UPTO_626_UPTO_650")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_651_UPTO_675")
                        .HasColumnName("DTEMP_UPTO_651_UPTO_675")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_66_UPTO_100")
                        .HasColumnName("DTEMP_UPTO_66_UPTO_100")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_676_UPTO_700")
                        .HasColumnName("DTEMP_UPTO_676_UPTO_700")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_701_UPTO_725")
                        .HasColumnName("DTEMP_UPTO_701_UPTO_725")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_726_UPTO_750")
                        .HasColumnName("DTEMP_UPTO_726_UPTO_750")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_751_UPTO_775")
                        .HasColumnName("DTEMP_UPTO_751_UPTO_775")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_776_UPTO_800")
                        .HasColumnName("DTEMP_UPTO_776_UPTO_800")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_801_UPTO_825")
                        .HasColumnName("DTEMP_UPTO_801_UPTO_825")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_826_UPTO_850")
                        .HasColumnName("DTEMP_UPTO_826_UPTO_850")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_851_UPTO_875")
                        .HasColumnName("DTEMP_UPTO_851_UPTO_875")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_876_UPTO_900")
                        .HasColumnName("DTEMP_UPTO_876_UPTO_900")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_901_UPTO_925")
                        .HasColumnName("DTEMP_UPTO_901_UPTO_925")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_926_UPTO_950")
                        .HasColumnName("DTEMP_UPTO_926_UPTO_950")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_951_UPTO_975")
                        .HasColumnName("DTEMP_UPTO_951_UPTO_975")
                        .HasColumnType("text");

                    b.Property<string>("DTEMP_UPTO_976_UPTO_1000")
                        .HasColumnName("DTEMP_UPTO_976_UPTO_1000")
                        .HasColumnType("text");

                    b.Property<string>("GROUP_NO")
                        .HasColumnName("GROUP_NO")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NOMINAL_COMPOSITION")
                        .HasColumnName("NOMINAL_COMPOSITION")
                        .HasColumnType("text");

                    b.Property<string>("PRODUCT_FORM")
                        .HasColumnName("PRODUCT_FORM")
                        .HasColumnType("text");

                    b.Property<string>("P_NO")
                        .HasColumnName("P_NO")
                        .HasColumnType("text");

                    b.Property<string>("SIZE_THICKNESS_MM")
                        .HasColumnName("SIZE_THICKNESS_MM")
                        .HasColumnType("text");

                    b.Property<string>("SPEC_NO")
                        .HasColumnName("SPEC_NO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STRENGTH_MPA")
                        .HasColumnName("TENSILE_STRENGTH_MPA")
                        .HasColumnType("text");

                    b.Property<string>("TYPE_GRADE")
                        .HasColumnName("TYPE_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("UNS_NO")
                        .HasColumnName("UNS_NO")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_MPA")
                        .HasColumnName("YIELD_STRENGTH_MPA")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("MST_MATERIAL");
                });

            modelBuilder.Entity("Piping.Entities.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("MenuCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DisplayOrder")
                        .HasColumnName("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("MenuName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentMenuID")
                        .HasColumnName("ParentMenuID")
                        .HasColumnType("integer");

                    b.Property<string>("Path")
                        .HasColumnName("Path")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ParentMenuID");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "SE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3463),
                            DisplayOrder = 1,
                            Icon = "fa fa-home",
                            Name = "Static Equipment",
                            Path = ""
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "PI",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3593),
                            DisplayOrder = 2,
                            Icon = "fa fa-home",
                            Name = "Piping",
                            Path = ""
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "ST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3600),
                            DisplayOrder = 3,
                            Icon = "fa fa-home",
                            Name = "Storage Tanks",
                            Path = ""
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "PRD",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3604),
                            DisplayOrder = 4,
                            Icon = "fa fa-home",
                            Name = "Pressure Relieving devices",
                            Path = ""
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "HCK",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3606),
                            DisplayOrder = 5,
                            Icon = "fa fa-home",
                            Name = "Home with configurable KIPs",
                            Path = ""
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "RPT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3610),
                            DisplayOrder = 6,
                            Icon = "fa fa-home",
                            Name = "Reports",
                            Path = ""
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "AFU",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3615),
                            DisplayOrder = 7,
                            Icon = "fa fa-home",
                            Name = "Action Follow up",
                            Path = ""
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "IMS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3619),
                            DisplayOrder = 8,
                            Icon = "fa fa-home",
                            Name = "Integrity management statistics",
                            Path = ""
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "IOW",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3622),
                            DisplayOrder = 9,
                            Icon = "fa fa-home",
                            Name = "IOWs",
                            Path = ""
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "PM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3625),
                            DisplayOrder = 10,
                            Icon = "fa fa-home",
                            Name = "Project Management",
                            Path = ""
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "WQC",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3629),
                            DisplayOrder = 11,
                            Icon = "fa fa-home",
                            Name = "Welding Quality control",
                            Path = ""
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "PMAST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3635),
                            DisplayOrder = 201,
                            Icon = "fa fa-file",
                            Name = "Piping Master",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "PRGEN",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3638),
                            DisplayOrder = 202,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Gen",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "PRTML",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3641),
                            DisplayOrder = 203,
                            Icon = "fa fa-file",
                            Name = "Piping Report-TML",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            Code = "PRCON",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3644),
                            DisplayOrder = 204,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Confidence",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            Code = "PROBS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3647),
                            DisplayOrder = 205,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Observations",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            Code = "PRRCM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3650),
                            DisplayOrder = 206,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Recommendations",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            Code = "PRRST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3653),
                            DisplayOrder = 207,
                            Icon = "fa fa-file",
                            Name = "Piping Report-Reom-Status",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            Code = "PRRST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3656),
                            DisplayOrder = 207,
                            Icon = "fa fa-file",
                            Name = "Corrosion Study",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            Code = "PCLST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3659),
                            DisplayOrder = 208,
                            Icon = "fa fa-file",
                            Name = "Piping Cluster",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            Code = "POFCL",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3662),
                            DisplayOrder = 209,
                            Icon = "fa fa-file",
                            Name = "POF calculation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            Code = "COFCL",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3665),
                            DisplayOrder = 210,
                            Icon = "fa fa-file",
                            Name = "COF calculation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            Code = "INPRG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3668),
                            DisplayOrder = 211,
                            Icon = "fa fa-file",
                            Name = "Inspection Program",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            Code = "MNGMT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3671),
                            DisplayOrder = 212,
                            Icon = "fa fa-file",
                            Name = "Management",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            Code = "PTORG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3674),
                            DisplayOrder = 213,
                            Icon = "fa fa-file",
                            Name = "Plant Organisation",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            Code = "PTDST",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3677),
                            DisplayOrder = 214,
                            Icon = "fa fa-file",
                            Name = "Plant Distribution",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            Code = "SBCFG",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3680),
                            DisplayOrder = 215,
                            Icon = "fa fa-file",
                            Name = "Dashboard configuration",
                            ParentMenuID = 2,
                            Path = ""
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            Code = "TCREF",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(3683),
                            DisplayOrder = 216,
                            Icon = "fa fa-file",
                            Name = "Table cross reference",
                            ParentMenuID = 2,
                            Path = ""
                        });
                });

            modelBuilder.Entity("Piping.Entities.MitigationSystem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MitigationSystemID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("FactMIT")
                        .HasColumnType("numeric");

                    b.Property<string>("Mitigation")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemCode")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_MitigationSystem");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(3246),
                            FactMIT = 0.25m,
                            Mitigation = "Inventory blowdown, coupled with isolation system classification B or higher",
                            SystemCode = "BD"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(3321),
                            FactMIT = 0.2m,
                            Mitigation = "Fire water deluge system and monitors",
                            SystemCode = "FWS"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(3325),
                            FactMIT = 0.05m,
                            Mitigation = "Fire water monitors only",
                            SystemCode = "FWM"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(3330),
                            FactMIT = 0.15m,
                            Mitigation = "Foam spray system",
                            SystemCode = "FS"
                        },
                        new
                        {
                            ID = 5,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 391, DateTimeKind.Local).AddTicks(3334),
                            FactMIT = 0m,
                            Mitigation = "Not available",
                            SystemCode = "NA"
                        });
                });

            modelBuilder.Entity("Piping.Entities.ObservationMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ObservationMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_Observation");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(9331),
                            Description = "Inspection done as per the program and no major abnormalities found."
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(9398),
                            Description = "Visual inspection done and paint damage seen at marked location in the attached drawing."
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(9401),
                            Description = "Visual inspection done and insulation damage seen at marked location in the attached drawing."
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(9403),
                            Description = "Support system found defective."
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 384, DateTimeKind.Local).AddTicks(9405),
                            Description = "Line found vibration."
                        });
                });

            modelBuilder.Entity("Piping.Entities.POFEC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_EC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AdjustedSuceptability")
                        .HasColumnType("text");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Art")
                        .HasColumnName("Art")
                        .HasColumnType("numeric");

                    b.Property<int?>("CoatAdjustment")
                        .HasColumnName("CoatAdjustment")
                        .HasColumnType("integer");

                    b.Property<int?>("CoatingAge")
                        .HasColumnName("CoatingAge")
                        .HasColumnType("integer");

                    b.Property<string>("CoatingQuality")
                        .HasColumnName("CoatingQuality")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("CorrosionType")
                        .HasColumnName("CorrosionType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("Driver")
                        .HasColumnName("Driver")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("EffectiveAge")
                        .HasColumnName("EffectiveAge")
                        .HasColumnType("integer");

                    b.Property<decimal?>("EffectiveCR")
                        .HasColumnName("EffectiveCR")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ExternalProcess")
                        .HasColumnName("ExternalProcess")
                        .HasColumnType("text");

                    b.Property<decimal?>("FlowStress")
                        .HasColumnName("FlowStress")
                        .HasColumnType("numeric");

                    b.Property<int?>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int?>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InsulationCondition")
                        .HasColumnType("text");

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnName("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<int?>("LineAge")
                        .HasColumnName("LineAge")
                        .HasColumnType("integer");

                    b.Property<int?>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredLCR")
                        .HasColumnName("MeasuredLCR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredSCR")
                        .HasColumnName("MeasuredSCR")
                        .HasColumnType("numeric");

                    b.Property<int?>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("numeric");

                    b.Property<string>("PipeDirectBeamComplexDesign")
                        .HasColumnName("PipeDirectBeamComplexDesign")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("Repainted")
                        .HasColumnType("text");

                    b.Property<int?>("RepaintedYear")
                        .HasColumnName("RepaintedYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SeverityIndex")
                        .HasColumnType("numeric");

                    b.Property<string>("SoilInterfaceCondensation")
                        .HasColumnName("SoilInterfaceCondensation")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("StrengthRatio")
                        .HasColumnName("StrengthRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("Suceptability")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TheoriticalCR")
                        .HasColumnName("TheoriticalCR")
                        .HasColumnType("numeric");

                    b.Property<string>("UseMeasuredLCR")
                        .HasColumnName("UseMeasuredLCR")
                        .HasColumnType("text");

                    b.Property<string>("UseMeasuredSCR")
                        .HasColumnName("UseMeasuredSCR")
                        .HasColumnType("text");

                    b.Property<int?>("VeryHigh")
                        .HasColumnName("VeryHigh")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_EC");
                });

            modelBuilder.Entity("Piping.Entities.POFIC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_IC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Art")
                        .HasColumnName("Art")
                        .HasColumnType("numeric");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("numeric");

                    b.Property<int?>("EffectiveAge")
                        .HasColumnName("EffectiveAge")
                        .HasColumnType("integer");

                    b.Property<decimal?>("EffectiveCR")
                        .HasColumnName("EffectiveCR")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("FlowStress")
                        .HasColumnName("FlowStress")
                        .HasColumnType("numeric");

                    b.Property<int?>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int?>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InjectionPoints")
                        .IsRequired()
                        .HasColumnName("InjectionPoints")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnName("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<int?>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredLCR")
                        .HasColumnName("MeasuredLCR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredSCR")
                        .HasColumnName("MeasuredSCR")
                        .HasColumnType("numeric");

                    b.Property<int?>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("numeric");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StrengthRatio")
                        .HasColumnName("StrengthRatio")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TheoriticalCR")
                        .HasColumnName("TheoriticalCR")
                        .HasColumnType("numeric");

                    b.Property<string>("UseMeasuredLCR")
                        .HasColumnName("UseMeasuredLCR")
                        .HasColumnType("text");

                    b.Property<string>("UseMeasuredSCR")
                        .HasColumnName("UseMeasuredSCR")
                        .HasColumnType("text");

                    b.Property<int?>("VeryHigh")
                        .HasColumnName("VeryHigh")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_IC");
                });

            modelBuilder.Entity("Piping.Entities.POFMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POFMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("POFMaster");
                });

            modelBuilder.Entity("Piping.Entities.POFODM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_ODM_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .IsRequired()
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<decimal>("DamageReductionFactor")
                        .HasColumnName("DamageReductionFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InitialSuceptability")
                        .IsRequired()
                        .HasColumnName("InitialSuceptability")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<int>("IntialIndex")
                        .HasColumnName("IntialIndex")
                        .HasColumnType("integer");

                    b.Property<int>("LastYearVH")
                        .HasColumnName("LastYearVH")
                        .HasColumnType("integer");

                    b.Property<int>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<int>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_ODM");
                });

            modelBuilder.Entity("Piping.Entities.POFSCC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("POF_SCC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .IsRequired()
                        .HasColumnName("DMCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("DMName")
                        .HasColumnName("DMName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DamageFactor")
                        .HasColumnName("DamageFactor")
                        .HasColumnType("integer");

                    b.Property<decimal>("DamageReductionFactor")
                        .HasColumnName("DamageReductionFactor")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int>("Found")
                        .HasColumnName("Found")
                        .HasColumnType("integer");

                    b.Property<int>("High")
                        .HasColumnName("High")
                        .HasColumnType("integer");

                    b.Property<string>("InitialSuceptability")
                        .IsRequired()
                        .HasColumnName("InitialSuceptability")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<int>("IntialIndex")
                        .HasColumnName("IntialIndex")
                        .HasColumnType("integer");

                    b.Property<int>("LastYearVH")
                        .HasColumnName("LastYearVH")
                        .HasColumnType("integer");

                    b.Property<int>("Low")
                        .HasColumnName("Low")
                        .HasColumnType("integer");

                    b.Property<int>("Medium")
                        .HasColumnName("Medium")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("POF_SCC");
                });

            modelBuilder.Entity("Piping.Entities.POF_EC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_POF_EC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ALLOWABLE_STRESS_PSI")
                        .HasColumnName("ALLOWABLE_STRESS_PSI")
                        .HasColumnType("text");

                    b.Property<string>("ART")
                        .HasColumnName("ART")
                        .HasColumnType("text");

                    b.Property<string>("AVAILABLE_THK")
                        .HasColumnName("AVAILABLE_THK")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_1")
                        .HasColumnName("CAL_OF_BETA_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_2")
                        .HasColumnName("CAL_OF_BETA_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_3")
                        .HasColumnName("CAL_OF_BETA_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_1")
                        .HasColumnName("CAL_OF_BETA_CONST_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_2")
                        .HasColumnName("CAL_OF_BETA_CONST_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_3")
                        .HasColumnName("CAL_OF_BETA_CONST_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVP")
                        .HasColumnName("CAL_OF_BETA_COVP")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVSF")
                        .HasColumnName("CAL_OF_BETA_COVSF")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVT")
                        .HasColumnName("CAL_OF_BETA_COVT")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnType("text");

                    b.Property<int?>("COATING_AGE")
                        .HasColumnName("COATING_AGE")
                        .HasColumnType("integer");

                    b.Property<string>("COATING_QUALITY")
                        .HasColumnName("COATING_QUALITY")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("COAT_ADJUSTMENT")
                        .HasColumnName("COAT_ADJUSTMENT")
                        .HasColumnType("integer");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_ALLOWANCE")
                        .HasColumnName("CORROSION_ALLOWANCE")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_TYPE")
                        .HasColumnName("CORROSION_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DAMAGE_FACTOR")
                        .HasColumnName("DAMAGE_FACTOR")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_PRESSURE_P_PSI")
                        .HasColumnName("DESIGN_PRESSURE_P_PSI")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_TEMP_DEGF")
                        .HasColumnName("DESIGN_TEMP_DEGF")
                        .HasColumnType("text");

                    b.Property<string>("EC_DRIVER")
                        .HasColumnName("EC_DRIVER")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("EFFECTIVE_AGE")
                        .HasColumnName("EFFECTIVE_AGE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORROSION_RATE")
                        .HasColumnName("EFFECTIVE_CORROSION_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORR_RATE")
                        .HasColumnName("EFFECTIVE_CORR_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_THK")
                        .HasColumnName("EFFECTIVE_THK")
                        .HasColumnType("text");

                    b.Property<string>("EFFICIENCY_OF_WELD_E")
                        .HasColumnName("EFFICIENCY_OF_WELD_E")
                        .HasColumnType("text");

                    b.Property<string>("EQUIPMENT_NO")
                        .HasColumnName("EQUIPMENT_NO")
                        .HasColumnType("text");

                    b.Property<string>("EXTERNAL_PROCESS")
                        .HasColumnName("EXTERNAL_PROCESS")
                        .HasColumnType("text");

                    b.Property<string>("FLOW_STRESS")
                        .HasColumnName("FLOW_STRESS")
                        .HasColumnType("text");

                    b.Property<string>("HALF_LIFE")
                        .HasColumnName("HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("HIGH")
                        .HasColumnName("HIGH")
                        .HasColumnType("text");

                    b.Property<string>("INJECTION_POINTS_INTERMITENT")
                        .HasColumnName("INJECTION_POINTS_INTERMITENT")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnName("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnName("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnType("text");

                    b.Property<int?>("LINE_AGE")
                        .HasColumnName("LINE_AGE")
                        .HasColumnType("integer");

                    b.Property<string>("LOW")
                        .HasColumnName("LOW")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_GRADE")
                        .HasColumnName("MATERIAL_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_STD")
                        .HasColumnName("MATERIAL_STD")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnName("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnName("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("MEDIUM")
                        .HasColumnName("MEDIUM")
                        .HasColumnType("text");

                    b.Property<string>("MIN_REQ_THK")
                        .HasColumnName("MIN_REQ_THK")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NO")
                        .HasColumnName("NO")
                        .HasColumnType("text");

                    b.Property<string>("NOM_DIA_D_INCHES")
                        .HasColumnName("NOM_DIA_D_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("NOM_THK_NT_INCHES")
                        .HasColumnName("NOM_THK_NT_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("OVERALL_POF")
                        .HasColumnName("OVERALL_POF")
                        .HasColumnType("text");

                    b.Property<string>("PIPE_DIRECT_BEAM_COMPLEX_DESIGN")
                        .HasColumnName("PIPE_DIRECT_BEAM_COMPLEX_DESIGN")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("text");

                    b.Property<string>("POF_EXPO")
                        .HasColumnName("POF_EXPO")
                        .HasColumnType("text");

                    b.Property<string>("POF_HALF_LIFE")
                        .HasColumnName("POF_HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_1")
                        .HasColumnName("POSTERIOR_PROBABILITY_1")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_2")
                        .HasColumnName("POSTERIOR_PROBABILITY_2")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_3")
                        .HasColumnName("POSTERIOR_PROBABILITY_3")
                        .HasColumnType("text");

                    b.Property<string>("PRESENT_YEAR")
                        .HasColumnName("PRESENT_YEAR")
                        .HasColumnType("text");

                    b.Property<string>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("text");

                    b.Property<string>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("text");

                    b.Property<string>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("text");

                    b.Property<string>("REMAINING_LIFE")
                        .HasColumnName("REMAINING_LIFE")
                        .HasColumnType("text");

                    b.Property<int?>("REPAINTED_YEAR")
                        .HasColumnName("REPAINTED_YEAR")
                        .HasColumnType("integer");

                    b.Property<string>("SOIL_INTERFACE_CONDENSATION")
                        .HasColumnName("SOIL_INTERFACE_CONDENSATION")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("STENGTH_RATIO")
                        .HasColumnName("STENGTH_RATIO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STREGTH_KSI")
                        .HasColumnName("TENSILE_STREGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnName("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_LICR")
                        .HasColumnName("USE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_SICR")
                        .HasColumnName("USE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("VERY_HIGH")
                        .HasColumnName("VERY_HIGH")
                        .HasColumnType("text");

                    b.Property<string>("YEAR_IN_SERVICE")
                        .HasColumnName("YEAR_IN_SERVICE")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_KSI")
                        .HasColumnName("YIELD_STRENGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("YOUNGS_MODULUS_Y")
                        .HasColumnName("YOUNGS_MODULUS_Y")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TBL_POF_EC");
                });

            modelBuilder.Entity("Piping.Entities.POF_IC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_POF_IC_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ALLOWABLE_STRESS_PSI")
                        .HasColumnName("ALLOWABLE_STRESS_PSI")
                        .HasColumnType("text");

                    b.Property<string>("ART")
                        .HasColumnName("ART")
                        .HasColumnType("text");

                    b.Property<string>("AVAILABLE_THK")
                        .HasColumnName("AVAILABLE_THK")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_1")
                        .HasColumnName("CAL_OF_BETA_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_2")
                        .HasColumnName("CAL_OF_BETA_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_3")
                        .HasColumnName("CAL_OF_BETA_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_1")
                        .HasColumnName("CAL_OF_BETA_CONST_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_2")
                        .HasColumnName("CAL_OF_BETA_CONST_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_CONST_3")
                        .HasColumnName("CAL_OF_BETA_CONST_3")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVP")
                        .HasColumnName("CAL_OF_BETA_COVP")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVSF")
                        .HasColumnName("CAL_OF_BETA_COVSF")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_COVT")
                        .HasColumnName("CAL_OF_BETA_COVT")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_1")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_2")
                        .HasColumnType("text");

                    b.Property<string>("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnName("CAL_OF_BETA_DS_VALUES_3")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_1_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_2_E")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_A")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_B")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_C")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_D")
                        .HasColumnType("text");

                    b.Property<string>("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnName("CONDITIONAL_PROBABILITY_3_E")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_ALLOWANCE")
                        .HasColumnName("CORROSION_ALLOWANCE")
                        .HasColumnType("text");

                    b.Property<string>("CORROSION_TYPE")
                        .HasColumnName("CORROSION_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DAMAGE_FACTOR")
                        .HasColumnName("DAMAGE_FACTOR")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_PRESSURE_P_PSI")
                        .HasColumnName("DESIGN_PRESSURE_P_PSI")
                        .HasColumnType("text");

                    b.Property<string>("DESIGN_TEMP_DEGF")
                        .HasColumnName("DESIGN_TEMP_DEGF")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_AGE")
                        .HasColumnName("EFFECTIVE_AGE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORROSION_RATE")
                        .HasColumnName("EFFECTIVE_CORROSION_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_CORR_RATE")
                        .HasColumnName("EFFECTIVE_CORR_RATE")
                        .HasColumnType("text");

                    b.Property<string>("EFFECTIVE_THK")
                        .HasColumnName("EFFECTIVE_THK")
                        .HasColumnType("text");

                    b.Property<string>("EFFICIENCY_OF_WELD_E")
                        .HasColumnName("EFFICIENCY_OF_WELD_E")
                        .HasColumnType("text");

                    b.Property<string>("EQUIPMENT_NO")
                        .HasColumnName("EQUIPMENT_NO")
                        .HasColumnType("text");

                    b.Property<string>("FLOW_STRESS")
                        .HasColumnName("FLOW_STRESS")
                        .HasColumnType("text");

                    b.Property<string>("HALF_LIFE")
                        .HasColumnName("HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("HIGH")
                        .HasColumnName("HIGH")
                        .HasColumnType("text");

                    b.Property<string>("INJECTION_POINTS_INTERMITENT")
                        .HasColumnName("INJECTION_POINTS_INTERMITENT")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_1")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_2")
                        .HasColumnType("text");

                    b.Property<string>("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnName("INSPECTION_EFFECTIVENESS_3")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnName("LAST_MEASURED_THK_FOR_DIA_LMT")
                        .HasColumnType("text");

                    b.Property<string>("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnName("LAST_MEASURED_YEAR_FOR_DIA_LMY")
                        .HasColumnType("text");

                    b.Property<string>("LOW")
                        .HasColumnName("LOW")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_GRADE")
                        .HasColumnName("MATERIAL_GRADE")
                        .HasColumnType("text");

                    b.Property<string>("MATERIAL_STD")
                        .HasColumnName("MATERIAL_STD")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnName("MEASURED_LONGTERM_CORROSION_RATE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnName("MEASURED_SHORTTERM_CORROSION_RATE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("MEDIUM")
                        .HasColumnName("MEDIUM")
                        .HasColumnType("text");

                    b.Property<string>("MIN_REQ_THK")
                        .HasColumnName("MIN_REQ_THK")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NO")
                        .HasColumnName("NO")
                        .HasColumnType("text");

                    b.Property<string>("NOM_DIA_D_INCHES")
                        .HasColumnName("NOM_DIA_D_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("NOM_THK_NT_INCHES")
                        .HasColumnName("NOM_THK_NT_INCHES")
                        .HasColumnType("text");

                    b.Property<string>("OVERALL_POF")
                        .HasColumnName("OVERALL_POF")
                        .HasColumnType("text");

                    b.Property<string>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("text");

                    b.Property<string>("POF_EXPO")
                        .HasColumnName("POF_EXPO")
                        .HasColumnType("text");

                    b.Property<string>("POF_HALF_LIFE")
                        .HasColumnName("POF_HALF_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_1")
                        .HasColumnName("POSTERIOR_PROBABILITY_1")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_2")
                        .HasColumnName("POSTERIOR_PROBABILITY_2")
                        .HasColumnType("text");

                    b.Property<string>("POSTERIOR_PROBABILITY_3")
                        .HasColumnName("POSTERIOR_PROBABILITY_3")
                        .HasColumnType("text");

                    b.Property<string>("PRESENT_YEAR")
                        .HasColumnName("PRESENT_YEAR")
                        .HasColumnType("text");

                    b.Property<string>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("text");

                    b.Property<string>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("text");

                    b.Property<string>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("text");

                    b.Property<string>("REMAINING_LIFE")
                        .HasColumnName("REMAINING_LIFE")
                        .HasColumnType("text");

                    b.Property<string>("STENGTH_RATIO")
                        .HasColumnName("STENGTH_RATIO")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TENSILE_STREGTH_KSI")
                        .HasColumnName("TENSILE_STREGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnName("THEORETICAL_CORROSION_RATE_TICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_LICR")
                        .HasColumnName("USE_LICR")
                        .HasColumnType("text");

                    b.Property<string>("USE_SICR")
                        .HasColumnName("USE_SICR")
                        .HasColumnType("text");

                    b.Property<string>("VERY_HIGH")
                        .HasColumnName("VERY_HIGH")
                        .HasColumnType("text");

                    b.Property<string>("YEAR_IN_SERVICE")
                        .HasColumnName("YEAR_IN_SERVICE")
                        .HasColumnType("text");

                    b.Property<string>("YIELD_STRENGTH_KSI")
                        .HasColumnName("YIELD_STRENGTH_KSI")
                        .HasColumnType("text");

                    b.Property<string>("YOUNGS_MODULUS_Y")
                        .HasColumnName("YOUNGS_MODULUS_Y")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("TBL_POF_IC");
                });

            modelBuilder.Entity("Piping.Entities.PRP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TBL_PRP_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PRP_1")
                        .HasColumnName("PRP_1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PRP_2")
                        .HasColumnName("PRP_2")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PRP_3")
                        .HasColumnName("PRP_3")
                        .HasColumnType("numeric");

                    b.Property<string>("PRP_CONFIDENCE")
                        .HasColumnName("PRP_CONFIDENCE")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("TBL_PRP");
                });

            modelBuilder.Entity("Piping.Entities.PipeCluster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeClusterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("LoopNo")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PWHT")
                        .HasColumnType("text");

                    b.Property<string>("PipeSpecification")
                        .HasColumnType("text");

                    b.Property<string>("PlantCode")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("PipeCluster");
                });

            modelBuilder.Entity("Piping.Entities.PipeClusterPOF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeClusterPOFID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<int?>("CorrosionStudyID")
                        .HasColumnName("CorrosionStudyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DMCode")
                        .HasColumnType("text");

                    b.Property<string>("DMDescription")
                        .HasColumnType("text");

                    b.Property<string>("DMGuideDocument")
                        .HasColumnType("text");

                    b.Property<decimal?>("DMRate")
                        .HasColumnType("numeric");

                    b.Property<string>("DMSeverity")
                        .HasColumnType("text");

                    b.Property<string>("DMSuceptability")
                        .HasColumnType("text");

                    b.Property<string>("DMType")
                        .HasColumnType("text");

                    b.Property<string>("Fluid")
                        .HasColumnType("text");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("MaxPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MinTemperature")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SpecialCondition")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CorrosionStudyID");

                    b.ToTable("PipeClusterPOF");
                });

            modelBuilder.Entity("Piping.Entities.PipeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AllowableStressMPA_S")
                        .HasColumnName("AllowableStressMPA_S")
                        .HasColumnType("numeric");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnType("integer");

                    b.Property<string>("AreaCode")
                        .HasColumnName("AreaCode")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<string>("ConstructionCode")
                        .IsRequired()
                        .HasColumnName("ConstructionCode")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("CorrosionAllowance")
                        .HasColumnName("CorrosionAllowance")
                        .HasColumnType("numeric");

                    b.Property<string>("CorrosionLoopNo")
                        .IsRequired()
                        .HasColumnName("CorrosionLoopNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("DesignPressure")
                        .HasColumnName("DesignPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DesignTemperature")
                        .HasColumnName("DesignTemperature")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveMinReqThk_EMRT")
                        .HasColumnName("EffectiveMinReqThk_EMRT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("EffectiveThk_ETHK")
                        .HasColumnName("EffectiveThk_ETHK")
                        .HasColumnType("numeric");

                    b.Property<string>("EquipmentNo")
                        .IsRequired()
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("FlowStress_FS")
                        .HasColumnName("FlowStress_FS")
                        .HasColumnType("numeric");

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasColumnName("Fluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FluidCode")
                        .IsRequired()
                        .HasColumnName("FluidCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FluidName")
                        .IsRequired()
                        .HasColumnName("FluidName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FromTo")
                        .HasColumnName("FromTo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Insulated")
                        .IsRequired()
                        .HasColumnName("Insulated")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("InsulationType")
                        .HasColumnName("InsulationType")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("JointEfficiency")
                        .HasColumnName("JointEfficiency")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LastMeasuredThick_LMT")
                        .HasColumnName("LastMeasuredThick_LMT")
                        .HasColumnType("numeric");

                    b.Property<int?>("LastMeasuredYear_LMY")
                        .HasColumnName("LastMeasuredYear_LMY")
                        .HasColumnType("integer");

                    b.Property<decimal>("Length")
                        .HasColumnName("Length")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MDMT")
                        .HasColumnName("MDMT")
                        .HasColumnType("numeric");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnName("MaterialCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MaterialGrade")
                        .IsRequired()
                        .HasColumnName("MaterialGrade")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MaterialStd")
                        .IsRequired()
                        .HasColumnName("MaterialStd")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("MinReqThkOption_MRTO")
                        .HasColumnName("MinReqThkOption_MRTO")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextFollowDate")
                        .HasColumnName("NextFollowDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextInspectionDate")
                        .HasColumnName("NextInspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnName("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnName("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingPressure")
                        .HasColumnName("OperatingPressure")
                        .HasColumnType("numeric")
                        .HasMaxLength(25);

                    b.Property<decimal?>("OperatingTemperature")
                        .HasColumnName("OperatingTemperature")
                        .HasColumnType("numeric")
                        .HasMaxLength(25);

                    b.Property<string>("OverallCOF")
                        .HasColumnName("OverallCOF")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("OverallPOF")
                        .HasColumnName("OverallPOF")
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("OverallRisk")
                        .HasColumnName("OverallRisk")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("OverallStatus")
                        .HasColumnName("OverallStatus")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PWHT")
                        .IsRequired()
                        .HasColumnName("PWHT")
                        .HasColumnType("character varying(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PandIDNo")
                        .HasColumnName("PandIDNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("PipeClusterNo")
                        .IsRequired()
                        .HasColumnName("PipeClusterNo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PipeSpec")
                        .IsRequired()
                        .HasColumnName("PipeSpec")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("PrMinReqThkExternal_PMTE")
                        .HasColumnName("PrMinReqThkExternal_PMTE")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PrMinReqThkInternal_PMTI")
                        .HasColumnName("PrMinReqThkInternal_PMTI")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StengthRatio_SR")
                        .HasColumnName("StengthRatio_SR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StructuralMinThk_SMT")
                        .HasColumnName("StructuralMinThk_SMT")
                        .HasColumnType("numeric");

                    b.Property<string>("SubFluid")
                        .IsRequired()
                        .HasColumnName("SubFluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TensileStrengthMPA_TS")
                        .HasColumnName("TensileStrengthMPA_TS")
                        .HasColumnType("numeric");

                    b.Property<string>("Train")
                        .IsRequired()
                        .HasColumnName("Train")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("UseLastMeasuredThick_ULMT")
                        .HasColumnName("UseLastMeasuredThick_ULMT")
                        .HasColumnType("text");

                    b.Property<decimal?>("UserCalPrMinReqThk_UMT")
                        .HasColumnName("UserCalPrMinReqThk_UMT")
                        .HasColumnType("numeric");

                    b.Property<int>("YearInService")
                        .HasColumnName("YearInService")
                        .HasColumnType("integer")
                        .HasMaxLength(4);

                    b.Property<decimal?>("YieldStrengthMPA_YS")
                        .HasColumnName("YieldStrengthMPA_YS")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.ToTable("PipeMaster");
                });

            modelBuilder.Entity("Piping.Entities.PipeMasterCOF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeMasterCOFID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplicableFluid")
                        .HasColumnType("text");

                    b.Property<decimal?>("ComponentDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ComponentLength")
                        .HasColumnType("numeric");

                    b.Property<string>("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DetectionRating")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("Flammable")
                        .HasColumnType("text");

                    b.Property<string>("Fluid")
                        .HasColumnType("text");

                    b.Property<string>("FluidCode")
                        .HasColumnType("text");

                    b.Property<string>("FluidPhase")
                        .HasColumnType("text");

                    b.Property<string>("FluidPhaseStored")
                        .HasColumnType("text");

                    b.Property<string>("IgnitionSource")
                        .HasColumnType("text");

                    b.Property<string>("IsolationRating")
                        .HasColumnType("text");

                    b.Property<decimal?>("MassComponent")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MassInventory")
                        .HasColumnType("numeric");

                    b.Property<string>("Mitigation")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("MolecularWeight")
                        .HasColumnType("numeric");

                    b.Property<string>("NFNT")
                        .HasColumnType("text");

                    b.Property<decimal?>("NormalBoilingPoint")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingPressure")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OperatingTemperature")
                        .HasColumnType("numeric");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ProductionLoss")
                        .HasColumnType("numeric");

                    b.Property<string>("ReleaseModel")
                        .HasColumnType("text");

                    b.Property<string>("ReleaseState")
                        .HasColumnType("text");

                    b.Property<string>("StoredStage")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Toxic")
                        .HasColumnType("text");

                    b.Property<string>("ToxicFluid")
                        .HasColumnType("text");

                    b.Property<decimal?>("ToxicFluidPercentage")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("PipeMasterCOF");
                });

            modelBuilder.Entity("Piping.Entities.PipeReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ClusterNo")
                        .HasColumnType("text");

                    b.Property<string>("ConsequenceRank")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DefectCode")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EquipmentNo")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasColumnName("Fluid")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("FromTo")
                        .HasColumnName("FromTo")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InspectionBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InspectionType")
                        .HasColumnType("text");

                    b.Property<int?>("InspectionYear")
                        .HasColumnType("integer");

                    b.Property<string>("InsulationCondition")
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<decimal?>("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextFollowUpDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NextFollowupDate")
                        .HasColumnType("text");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<string>("OverallCOF")
                        .HasColumnType("text");

                    b.Property<string>("OverallCondition")
                        .HasColumnType("text");

                    b.Property<string>("OverallPOF")
                        .HasColumnType("text");

                    b.Property<string>("OverallStatus")
                        .HasColumnType("text");

                    b.Property<string>("PandIDNo")
                        .HasColumnName("PandIDNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("RCAModel")
                        .HasColumnType("text");

                    b.Property<string>("RCAStatus")
                        .HasColumnType("text");

                    b.Property<int?>("RepaintedYear")
                        .HasColumnType("integer");

                    b.Property<string>("ReportNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequireRCA")
                        .HasColumnType("text");

                    b.Property<string>("ResultedInto")
                        .HasColumnType("text");

                    b.Property<string>("RevisedStatus")
                        .HasColumnType("text");

                    b.Property<string>("RootCause")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("TotalManHours")
                        .HasColumnType("numeric");

                    b.Property<string>("Train")
                        .IsRequired()
                        .HasColumnName("Train")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("VerificationBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("VerificationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("WorkOrderNo")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.ToTable("PipeReport");
                });

            modelBuilder.Entity("Piping.Entities.PlantMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlantMasterID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("PlantCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("PlantName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentPlantID")
                        .HasColumnName("ParentPlantID")
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("ParentPlantID");

                    b.ToTable("PlantMaster");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "Ammonia",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2713),
                            Icon = "assets/Ammonia.svg",
                            Name = "Ammonia"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "Urea",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2846),
                            Icon = "assets/Urea.svg",
                            Name = "Urea"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "Melamine",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2857),
                            Icon = "assets/Melamine.svg",
                            Name = "Melamine"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "Compressor",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2860),
                            Icon = "assets/Compressor.svg",
                            Name = "Compressor House"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "Utilits",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2862),
                            Icon = "assets/Utillits.svg",
                            Name = "Utilits"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "Others",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2865),
                            Icon = "assets/Others.svg",
                            Name = "Others"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "A1",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2870),
                            Name = "Ammonia 01",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            Code = "A2",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2873),
                            Name = "Ammonia 02",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            Code = "A3",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2875),
                            Name = "Ammonia 03",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            Code = "A4",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2878),
                            Name = "Ammonia 04",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            Code = "A5",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2881),
                            Name = "Ammonia 05",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            Code = "A6",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2884),
                            Name = "Ammonia 06",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            Code = "QPNT",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2887),
                            Name = "QPNT",
                            ParentPlantID = 1
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            Code = "CH1",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2891),
                            Name = "Compressor House 01",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            Code = "CH2",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2894),
                            Name = "Compressor House 02",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            Code = "CH3",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2896),
                            Name = "Compressor House 03",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            Code = "CH4",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2900),
                            Name = "Compressor House 04",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            Code = "CH5",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2903),
                            Name = "Compressor House 05",
                            ParentPlantID = 4
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            Code = "CH6",
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 360, DateTimeKind.Local).AddTicks(2906),
                            Name = "Compressor House 06",
                            ParentPlantID = 4
                        });
                });

            modelBuilder.Entity("Piping.Entities.QuickLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QuickLinkID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DestinationTable")
                        .IsRequired()
                        .HasColumnName("DestinationTable")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationTableColumn")
                        .IsRequired()
                        .HasColumnName("DestinationTableColumn")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Icon")
                        .HasColumnName("Icon")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("QuickLinkName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SourceTable")
                        .IsRequired()
                        .HasColumnName("SourceTable")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SourceTableColumn")
                        .IsRequired()
                        .HasColumnName("SourceTableColumn")
                        .HasColumnType("character varying(150)")
                        .HasMaxLength(150);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("QuickLink");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8248),
                            DestinationTable = "PipeReport",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_PipingReports_Icon_Gray.svg",
                            Name = "Piping Reports",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8418),
                            DestinationTable = "COFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_COFMaster_Icon_Gray.svg",
                            Name = "COF Master Records",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8424),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_POFMaster_Icon_Gray.svg",
                            Name = "POF Master Records",
                            SourceTable = "PipeMaster",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8428),
                            DestinationTable = "PipeReport",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_CorrosionStudy_Icon_Gray.svg",
                            Name = "Corrosion Study",
                            SourceTable = "CorrosionStudy",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8430),
                            DestinationTable = "COFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_LookupTables_Icon_Gray.svg",
                            Name = "Lookup Tables",
                            SourceTable = "LookupTables",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8433),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_RiskAnalysis_Icon_Gray.svg",
                            Name = "Risk Analysis",
                            SourceTable = "RiskAnalysis",
                            SourceTableColumn = "EquipmentNo"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 359, DateTimeKind.Local).AddTicks(8436),
                            DestinationTable = "POFMaster",
                            DestinationTableColumn = "EquipmentNo",
                            Icon = "assets/icons/Piping_QuickLink_InspectionProgram_Icon_Gray.svg",
                            Name = "Inspection Program",
                            SourceTable = "InspectionProgram",
                            SourceTableColumn = "EquipmentNo"
                        });
                });

            modelBuilder.Entity("Piping.Entities.RiskAnalysis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RiskAnalysisID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AnalysisCummulativeRisk")
                        .HasColumnName("A_CummulativeRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisFinancial")
                        .HasColumnName("A_Financial")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisFinancialRisk")
                        .HasColumnName("A_FinancialRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisPOF")
                        .HasColumnName("A_POF")
                        .HasColumnType("integer");

                    b.Property<int?>("AnalysisPriority")
                        .HasColumnName("A_Priority")
                        .HasColumnType("integer");

                    b.Property<string>("AnalysisRisk")
                        .HasColumnName("A_Risk")
                        .HasColumnType("text");

                    b.Property<int?>("AnalysisYear")
                        .HasColumnName("A_Year")
                        .HasColumnType("integer");

                    b.Property<string>("COF")
                        .HasColumnName("COF")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CurrentCummulativeRisk")
                        .HasColumnName("C_CummulativeRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentFinancial")
                        .HasColumnName("C_Financial")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentFinancialRisk")
                        .HasColumnName("C_FinancialRisk")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentPOF")
                        .HasColumnName("C_POF")
                        .HasColumnType("integer");

                    b.Property<int?>("CurrentPriority")
                        .HasColumnName("C_Priority")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentRisk")
                        .HasColumnName("C_Risk")
                        .HasColumnType("text");

                    b.Property<int?>("CurrentYear")
                        .HasColumnName("C_Year")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("RiskAnalysis");
                });

            modelBuilder.Entity("Piping.Entities.RiskPriority", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RiskPriorityID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("COF")
                        .HasColumnName("COF")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Financial")
                        .HasColumnName("Financial")
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("POF")
                        .HasColumnName("POF")
                        .HasColumnType("integer");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Risk")
                        .HasColumnName("Risk")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_RiskPriority");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(479),
                            Financial = 1000000,
                            POF = 1,
                            Priority = 1,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 2,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(655),
                            Financial = 100000,
                            POF = 2,
                            Priority = 3,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 3,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(663),
                            Financial = 10000,
                            POF = 3,
                            Priority = 5,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 4,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(670),
                            Financial = 1000,
                            POF = 4,
                            Priority = 10,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 5,
                            COF = "A",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(676),
                            Financial = 100,
                            POF = 5,
                            Priority = 12,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 6,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(682),
                            Financial = 1000000,
                            POF = 1,
                            Priority = 2,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 7,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(686),
                            Financial = 100000,
                            POF = 2,
                            Priority = 6,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 8,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(688),
                            Financial = 1000,
                            POF = 3,
                            Priority = 9,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 9,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(691),
                            Financial = 100,
                            POF = 4,
                            Priority = 15,
                            Risk = "MEDIUMH"
                        },
                        new
                        {
                            ID = 10,
                            COF = "B",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(693),
                            Financial = 10,
                            POF = 5,
                            Priority = 19,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 11,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(696),
                            Financial = 10000,
                            POF = 1,
                            Priority = 4,
                            Risk = "HIGH"
                        },
                        new
                        {
                            ID = 12,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(699),
                            Financial = 1000,
                            POF = 2,
                            Priority = 8,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 13,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(702),
                            Financial = 100,
                            POF = 3,
                            Priority = 14,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 14,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(704),
                            Financial = 10,
                            POF = 4,
                            Priority = 18,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 15,
                            COF = "C",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(707),
                            Financial = 1,
                            POF = 5,
                            Priority = 22,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 16,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(710),
                            Financial = 1000,
                            POF = 1,
                            Priority = 7,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 17,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(713),
                            Financial = 100,
                            POF = 2,
                            Priority = 13,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 18,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(717),
                            Financial = 10,
                            POF = 3,
                            Priority = 17,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 19,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(719),
                            Financial = 1,
                            POF = 4,
                            Priority = 21,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 20,
                            COF = "D",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(722),
                            Financial = 0,
                            POF = 5,
                            Priority = 24,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 21,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(725),
                            Financial = 100,
                            POF = 1,
                            Priority = 11,
                            Risk = "MEDIUM HIGH"
                        },
                        new
                        {
                            ID = 22,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(729),
                            Financial = 10,
                            POF = 2,
                            Priority = 16,
                            Risk = "MEDIUM"
                        },
                        new
                        {
                            ID = 23,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(731),
                            Financial = 1,
                            POF = 3,
                            Priority = 20,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 24,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(734),
                            Financial = 0,
                            POF = 4,
                            Priority = 23,
                            Risk = "LOW"
                        },
                        new
                        {
                            ID = 25,
                            COF = "E",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 387, DateTimeKind.Local).AddTicks(737),
                            Financial = 0,
                            POF = 5,
                            Priority = 25,
                            Risk = "LOW"
                        });
                });

            modelBuilder.Entity("Piping.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("RoleCode")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("RoleName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            Code = "ADM",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 348, DateTimeKind.Local).AddTicks(7075),
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            Code = "INS",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4868),
                            Name = "Inspector"
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            Code = "INE",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4936),
                            Name = "Integrity Engineer"
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            Code = "HOI",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4943),
                            Name = "Head of Integrity"
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            Code = "MNT",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4948),
                            Name = "Maintenance"
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            Code = "OPR",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4953),
                            Name = "Operation"
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            Code = "GEN",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 350, DateTimeKind.Local).AddTicks(4987),
                            Name = "General"
                        });
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuAction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleMenuActionID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ActionID")
                        .HasColumnType("integer");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MenuID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ActionID");

                    b.HasIndex("MenuID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleMenuAction");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7248),
                            MenuID = 1,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7373),
                            MenuID = 2,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7382),
                            MenuID = 3,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7386),
                            MenuID = 4,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7389),
                            MenuID = 5,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7392),
                            MenuID = 6,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7395),
                            MenuID = 7,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7398),
                            MenuID = 8,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7400),
                            MenuID = 9,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7403),
                            MenuID = 10,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7405),
                            MenuID = 11,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 12,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7408),
                            MenuID = 12,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 13,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7411),
                            MenuID = 13,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 14,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7413),
                            MenuID = 14,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 15,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7416),
                            MenuID = 15,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 16,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7418),
                            MenuID = 16,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 17,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7421),
                            MenuID = 17,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 18,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7424),
                            MenuID = 18,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 19,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7427),
                            MenuID = 19,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 20,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7429),
                            MenuID = 20,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 21,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7431),
                            MenuID = 21,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 22,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7433),
                            MenuID = 22,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 23,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7436),
                            MenuID = 23,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 24,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7438),
                            MenuID = 24,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 25,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7442),
                            MenuID = 25,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 26,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7445),
                            MenuID = 26,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 27,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7447),
                            MenuID = 27,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 28,
                            ActionID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7450),
                            MenuID = 28,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7452),
                            MenuID = 1,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7454),
                            MenuID = 2,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7457),
                            MenuID = 3,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7460),
                            MenuID = 4,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7462),
                            MenuID = 5,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7465),
                            MenuID = 6,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7467),
                            MenuID = 7,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 36,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7469),
                            MenuID = 8,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 37,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7472),
                            MenuID = 9,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 38,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7474),
                            MenuID = 10,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 39,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7476),
                            MenuID = 11,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 40,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7479),
                            MenuID = 12,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 41,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7482),
                            MenuID = 13,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 42,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7484),
                            MenuID = 14,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 43,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7486),
                            MenuID = 15,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 44,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7489),
                            MenuID = 16,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 45,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7492),
                            MenuID = 17,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 46,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7494),
                            MenuID = 18,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 47,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7497),
                            MenuID = 19,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 48,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7499),
                            MenuID = 20,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 49,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7501),
                            MenuID = 21,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 50,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7504),
                            MenuID = 22,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 51,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7506),
                            MenuID = 23,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 52,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7508),
                            MenuID = 24,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 53,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7511),
                            MenuID = 25,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 54,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7513),
                            MenuID = 26,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 55,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7516),
                            MenuID = 27,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 56,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7518),
                            MenuID = 28,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 57,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7523),
                            MenuID = 1,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 58,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7525),
                            MenuID = 2,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 59,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7527),
                            MenuID = 3,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 60,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7530),
                            MenuID = 4,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 61,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7532),
                            MenuID = 5,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 62,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7534),
                            MenuID = 6,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 63,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7537),
                            MenuID = 7,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 64,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7598),
                            MenuID = 8,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 65,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7605),
                            MenuID = 9,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 66,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7607),
                            MenuID = 10,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 67,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7609),
                            MenuID = 11,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 68,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7612),
                            MenuID = 14,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 69,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7614),
                            MenuID = 15,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 70,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7617),
                            MenuID = 16,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 71,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7621),
                            MenuID = 17,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 72,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7623),
                            MenuID = 18,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 73,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7626),
                            MenuID = 19,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 74,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7628),
                            MenuID = 20,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 75,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7630),
                            MenuID = 21,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 76,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7633),
                            MenuID = 22,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 77,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7635),
                            MenuID = 23,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 78,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7638),
                            MenuID = 24,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 79,
                            ActionID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7640),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 80,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7642),
                            MenuID = 26,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 81,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7645),
                            MenuID = 27,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 82,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7647),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 83,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7650),
                            MenuID = 26,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 84,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7654),
                            MenuID = 27,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 85,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7656),
                            MenuID = 14,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 86,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7659),
                            MenuID = 15,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 87,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7662),
                            MenuID = 16,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 88,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7664),
                            MenuID = 18,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 89,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7666),
                            MenuID = 19,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 90,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7669),
                            MenuID = 21,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 91,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7672),
                            MenuID = 22,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 92,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7675),
                            MenuID = 23,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 93,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7677),
                            MenuID = 24,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 94,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7680),
                            MenuID = 25,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 95,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7683),
                            MenuID = 1,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 96,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7686),
                            MenuID = 2,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 97,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7690),
                            MenuID = 3,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 98,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7692),
                            MenuID = 4,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 99,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7695),
                            MenuID = 5,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 100,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7698),
                            MenuID = 6,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 101,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7701),
                            MenuID = 7,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 102,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7704),
                            MenuID = 8,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 103,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7706),
                            MenuID = 9,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 104,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7709),
                            MenuID = 10,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 105,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7711),
                            MenuID = 11,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 106,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7713),
                            MenuID = 12,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 107,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7715),
                            MenuID = 13,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 108,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7718),
                            MenuID = 14,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 109,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7720),
                            MenuID = 15,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 110,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7722),
                            MenuID = 16,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 111,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7727),
                            MenuID = 17,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 112,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7729),
                            MenuID = 18,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 113,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7731),
                            MenuID = 19,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 114,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7734),
                            MenuID = 20,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 115,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7736),
                            MenuID = 21,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 116,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7739),
                            MenuID = 22,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 117,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7741),
                            MenuID = 23,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 118,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7743),
                            MenuID = 24,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 119,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7746),
                            MenuID = 25,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 120,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7748),
                            MenuID = 26,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 121,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7750),
                            MenuID = 27,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 122,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7753),
                            MenuID = 28,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 123,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7755),
                            MenuID = 1,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 124,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7759),
                            MenuID = 2,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 125,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7761),
                            MenuID = 3,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 126,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7765),
                            MenuID = 4,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 127,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7767),
                            MenuID = 5,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 128,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7769),
                            MenuID = 6,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 129,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7772),
                            MenuID = 7,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 130,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7774),
                            MenuID = 8,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 131,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7776),
                            MenuID = 9,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 132,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7787),
                            MenuID = 10,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 133,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7790),
                            MenuID = 11,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 134,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7792),
                            MenuID = 12,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 135,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7795),
                            MenuID = 13,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 136,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7798),
                            MenuID = 14,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 137,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7801),
                            MenuID = 15,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 138,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7804),
                            MenuID = 16,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 139,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7806),
                            MenuID = 17,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 140,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7809),
                            MenuID = 18,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 141,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7812),
                            MenuID = 19,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 142,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7814),
                            MenuID = 20,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 143,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7817),
                            MenuID = 21,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 144,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7821),
                            MenuID = 22,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 145,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7823),
                            MenuID = 23,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 146,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7826),
                            MenuID = 24,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 147,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7829),
                            MenuID = 25,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 148,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7831),
                            MenuID = 26,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 149,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7834),
                            MenuID = 27,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 150,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7838),
                            MenuID = 28,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 151,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7840),
                            MenuID = 18,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 152,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7842),
                            MenuID = 1,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 153,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7845),
                            MenuID = 2,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 154,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7847),
                            MenuID = 3,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 155,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7850),
                            MenuID = 4,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 156,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7853),
                            MenuID = 5,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 157,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7855),
                            MenuID = 6,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 158,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7857),
                            MenuID = 7,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 159,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7860),
                            MenuID = 8,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 160,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7862),
                            MenuID = 9,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 161,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7865),
                            MenuID = 10,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 162,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7867),
                            MenuID = 11,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 163,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7870),
                            MenuID = 12,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 164,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7874),
                            MenuID = 13,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 165,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7876),
                            MenuID = 14,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 166,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7879),
                            MenuID = 15,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 167,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7881),
                            MenuID = 16,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 168,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7884),
                            MenuID = 17,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 169,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7886),
                            MenuID = 18,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 170,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7889),
                            MenuID = 19,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 171,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7891),
                            MenuID = 20,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 172,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7894),
                            MenuID = 21,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 173,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7897),
                            MenuID = 22,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 174,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7899),
                            MenuID = 23,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 175,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7902),
                            MenuID = 24,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 176,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7905),
                            MenuID = 25,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 177,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7912),
                            MenuID = 26,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 178,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7914),
                            MenuID = 27,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 180,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7917),
                            MenuID = 28,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 181,
                            ActionID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7920),
                            MenuID = 18,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 182,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7922),
                            MenuID = 1,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 183,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7925),
                            MenuID = 2,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 184,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7928),
                            MenuID = 3,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 185,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7930),
                            MenuID = 4,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 186,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7932),
                            MenuID = 5,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 187,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7934),
                            MenuID = 6,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 188,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7937),
                            MenuID = 7,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 189,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7939),
                            MenuID = 8,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 190,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7941),
                            MenuID = 9,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 191,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7944),
                            MenuID = 10,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 192,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7948),
                            MenuID = 11,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 193,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7950),
                            MenuID = 12,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 194,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7953),
                            MenuID = 13,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 195,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7955),
                            MenuID = 14,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 196,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7958),
                            MenuID = 15,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 197,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7960),
                            MenuID = 16,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 198,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7962),
                            MenuID = 17,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 199,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7965),
                            MenuID = 18,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 200,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7967),
                            MenuID = 19,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 201,
                            ActionID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7976),
                            MenuID = 20,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 202,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7979),
                            MenuID = 21,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 203,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7982),
                            MenuID = 22,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 204,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7984),
                            MenuID = 23,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 205,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7990),
                            MenuID = 24,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 206,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7993),
                            MenuID = 25,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 207,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7995),
                            MenuID = 26,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 208,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(7998),
                            MenuID = 27,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 209,
                            ActionID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 353, DateTimeKind.Local).AddTicks(8002),
                            MenuID = 28,
                            RoleID = 7
                        });
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuQuickLink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleMenuQuickLinkID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("MenuID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("QuickLinkID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.HasIndex("QuickLinkID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleMenuQuickLink");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(2857),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(2996),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3002),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3005),
                            MenuID = 12,
                            QuickLinkID = 4,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3007),
                            MenuID = 12,
                            QuickLinkID = 5,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3010),
                            MenuID = 12,
                            QuickLinkID = 6,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3012),
                            MenuID = 12,
                            QuickLinkID = 7,
                            RoleID = 1
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3016),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3018),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3021),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 2
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3023),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3027),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3029),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 3
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3032),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3035),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3038),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 4
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3040),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3043),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3045),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 5
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3048),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3071),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3074),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 6
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3077),
                            MenuID = 12,
                            QuickLinkID = 1,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3080),
                            MenuID = 12,
                            QuickLinkID = 2,
                            RoleID = 7
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 369, DateTimeKind.Local).AddTicks(3082),
                            MenuID = 12,
                            QuickLinkID = 3,
                            RoleID = 7
                        });
                });

            modelBuilder.Entity("Piping.Entities.StructuralMinThk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MST_StructuralMinThk_ID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasColumnName("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OutsideDiameterInches")
                        .HasColumnName("OutsideDiameter_IN")
                        .HasColumnType("numeric");

                    b.Property<decimal>("OutsideDiameterMM")
                        .HasColumnName("OutsideDiameter_MM")
                        .HasColumnType("numeric");

                    b.Property<decimal>("StructureWallThicknessMM")
                        .HasColumnName("StructureWallThickness_MM")
                        .HasColumnType("numeric");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MST_StructuralMinThk");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            ComponentType = "1/4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8806),
                            OutsideDiameterInches = 0.302m,
                            OutsideDiameterMM = 7.6708m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            ComponentType = "1/2\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8924),
                            OutsideDiameterInches = 0.84m,
                            OutsideDiameterMM = 21.336m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 3,
                            Active = true,
                            ComponentType = "3/4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8929),
                            OutsideDiameterInches = 1.05m,
                            OutsideDiameterMM = 26.67m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 4,
                            Active = true,
                            ComponentType = "1\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8933),
                            OutsideDiameterInches = 1.315m,
                            OutsideDiameterMM = 33.401m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 5,
                            Active = true,
                            ComponentType = "1.25\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8936),
                            OutsideDiameterInches = 1.315m,
                            OutsideDiameterMM = 33.401m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 6,
                            Active = true,
                            ComponentType = "1.5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8940),
                            OutsideDiameterInches = 1.9m,
                            OutsideDiameterMM = 48.26m,
                            StructureWallThicknessMM = 1.5748m
                        },
                        new
                        {
                            ID = 7,
                            Active = true,
                            ComponentType = "2\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8943),
                            OutsideDiameterInches = 2.375m,
                            OutsideDiameterMM = 60.325m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 8,
                            Active = true,
                            ComponentType = "2.5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8946),
                            OutsideDiameterInches = 2.875m,
                            OutsideDiameterMM = 73.025m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 9,
                            Active = true,
                            ComponentType = "3\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8949),
                            OutsideDiameterInches = 3.5m,
                            OutsideDiameterMM = 88.9m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 10,
                            Active = true,
                            ComponentType = "4\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8952),
                            OutsideDiameterInches = 4.5m,
                            OutsideDiameterMM = 114.3m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 11,
                            Active = true,
                            ComponentType = "5\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8956),
                            OutsideDiameterInches = 5.563m,
                            OutsideDiameterMM = 141.3002m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 12,
                            Active = true,
                            ComponentType = "6\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8960),
                            OutsideDiameterInches = 6.625m,
                            OutsideDiameterMM = 168.275m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 13,
                            Active = true,
                            ComponentType = "8\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8963),
                            OutsideDiameterInches = 8.625m,
                            OutsideDiameterMM = 219.075m,
                            StructureWallThicknessMM = 2.3876m
                        },
                        new
                        {
                            ID = 14,
                            Active = true,
                            ComponentType = "10\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8967),
                            OutsideDiameterInches = 10.75m,
                            OutsideDiameterMM = 273.05m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 15,
                            Active = true,
                            ComponentType = "2050NB",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8970),
                            OutsideDiameterInches = 10.75m,
                            OutsideDiameterMM = 273.05m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 16,
                            Active = true,
                            ComponentType = "12\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(8973),
                            OutsideDiameterInches = 12.75m,
                            OutsideDiameterMM = 323.85m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 17,
                            Active = true,
                            ComponentType = "14\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9008),
                            OutsideDiameterInches = 14m,
                            OutsideDiameterMM = 355.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 18,
                            Active = true,
                            ComponentType = "16\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9012),
                            OutsideDiameterInches = 16m,
                            OutsideDiameterMM = 406.4m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 19,
                            Active = true,
                            ComponentType = "18\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9015),
                            OutsideDiameterInches = 18m,
                            OutsideDiameterMM = 457.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 20,
                            Active = true,
                            ComponentType = "20\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9019),
                            OutsideDiameterInches = 20m,
                            OutsideDiameterMM = 508m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 21,
                            Active = true,
                            ComponentType = "24\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9022),
                            OutsideDiameterInches = 24m,
                            OutsideDiameterMM = 609.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 22,
                            Active = true,
                            ComponentType = "26\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9025),
                            OutsideDiameterInches = 25.25m,
                            OutsideDiameterMM = 641.35m,
                            StructureWallThicknessMM = 4.064m
                        },
                        new
                        {
                            ID = 23,
                            Active = true,
                            ComponentType = "28\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9028),
                            OutsideDiameterInches = 28m,
                            OutsideDiameterMM = 711.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 24,
                            Active = true,
                            ComponentType = "28\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9031),
                            OutsideDiameterInches = 28m,
                            OutsideDiameterMM = 711.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 25,
                            Active = true,
                            ComponentType = "30\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9034),
                            OutsideDiameterInches = 30m,
                            OutsideDiameterMM = 762m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 26,
                            Active = true,
                            ComponentType = "32\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9037),
                            OutsideDiameterInches = 32m,
                            OutsideDiameterMM = 812.8m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 27,
                            Active = true,
                            ComponentType = "36\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9059),
                            OutsideDiameterInches = 36m,
                            OutsideDiameterMM = 914.4m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 28,
                            Active = true,
                            ComponentType = "38\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9064),
                            OutsideDiameterInches = 37.25m,
                            OutsideDiameterMM = 946.15m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 29,
                            Active = true,
                            ComponentType = "40\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9067),
                            OutsideDiameterInches = 40m,
                            OutsideDiameterMM = 1016m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 30,
                            Active = true,
                            ComponentType = "42\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9070),
                            OutsideDiameterInches = 42m,
                            OutsideDiameterMM = 1066.8m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 31,
                            Active = true,
                            ComponentType = "48\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9074),
                            OutsideDiameterInches = 48m,
                            OutsideDiameterMM = 1219.2m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 32,
                            Active = true,
                            ComponentType = "54\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9077),
                            OutsideDiameterInches = 54m,
                            OutsideDiameterMM = 1371.6m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 33,
                            Active = true,
                            ComponentType = "56\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9081),
                            OutsideDiameterInches = 55m,
                            OutsideDiameterMM = 1397m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 34,
                            Active = true,
                            ComponentType = "60\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9084),
                            OutsideDiameterInches = 60m,
                            OutsideDiameterMM = 1524m,
                            StructureWallThicknessMM = 3.175m
                        },
                        new
                        {
                            ID = 35,
                            Active = true,
                            ComponentType = "> 60\" Pipe",
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 377, DateTimeKind.Local).AddTicks(9087),
                            OutsideDiameterInches = 102m,
                            OutsideDiameterMM = 2590.8m,
                            StructureWallThicknessMM = 3.175m
                        });
                });

            modelBuilder.Entity("Piping.Entities.TML", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TMLID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ComponentType")
                        .HasColumnType("text");

                    b.Property<string>("CorrosionType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal?>("LastMeasuredDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LastMeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<int?>("LastMeasuredYear")
                        .HasColumnType("integer");

                    b.Property<decimal?>("MeasuredDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NextInspectionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("NominalDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<int?>("PipeMasterID")
                        .HasColumnName("PipeMasterID")
                        .HasColumnType("integer");

                    b.Property<int?>("PipeReportID")
                        .HasColumnName("PipeReportID")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RemainingLife")
                        .HasColumnType("numeric");

                    b.Property<string>("ReportNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TMLNo")
                        .HasColumnType("text");

                    b.Property<int?>("YearInService")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("PipeMasterID");

                    b.HasIndex("PipeReportID");

                    b.ToTable("TML");
                });

            modelBuilder.Entity("Piping.Entities.TMLHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TMLHistoryID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CorrosionType")
                        .HasColumnName("CorrosionType")
                        .HasColumnType("character varying(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Diameter")
                        .HasColumnName("Diameter")
                        .HasColumnType("integer");

                    b.Property<string>("EquipmentNo")
                        .HasColumnName("EquipmentNo")
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<decimal>("MeasuredThick")
                        .HasColumnName("MeasuredThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("NominalThick")
                        .HasColumnName("NominalThick")
                        .HasColumnType("numeric");

                    b.Property<string>("ReportNo")
                        .HasColumnName("ReportNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TMLNo")
                        .HasColumnName("TMLNo")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Year")
                        .HasColumnName("Year")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("TMLHistory");
                });

            modelBuilder.Entity("Piping.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("CompanyID")
                        .HasColumnName("CompanyID")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LockedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .HasColumnName("PasswordSalt")
                        .HasColumnType("text");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("Username")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CompanyID = 1,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 371, DateTimeKind.Local).AddTicks(3638),
                            Email = "praveen.mondithoka@senecaglobal.com",
                            IsExpired = false,
                            IsLocked = false,
                            Password = "10000.4UHjc0+Y83AmfG8z6oLsEQ==.pA2/E7H6cE3e6028FpnZXkNjM6d18MOUuXc7tCRUilc=",
                            PasswordHash = "10000.4UHjc0+Y83AmfG8z6oLsEQ==.pA2/E7H6cE3e6028FpnZXkNjM6d18MOUuXc7tCRUilc=",
                            Username = "E0001"
                        });
                });

            modelBuilder.Entity("Piping.Entities.UserAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserAuditID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnName("ActivityType")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Occurred")
                        .HasColumnName("Occurred")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserID")
                        .HasColumnName("UserID")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAudit");
                });

            modelBuilder.Entity("Piping.Entities.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RoleID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("SystemInfo")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("UserID")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            CreatedBy = "SYSADMIN",
                            CreatedDate = new DateTime(2020, 8, 12, 2, 10, 0, 372, DateTimeKind.Local).AddTicks(6736),
                            RoleID = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("Piping.Entities.COFMaster", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.Department", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.Employee", b =>
                {
                    b.HasOne("Piping.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.IOW", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionConfidence", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionDistribution", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionDocument", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionObservation", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionProgram", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionRecommendation", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.InspectionStrategy", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.Menu", b =>
                {
                    b.HasOne("Piping.Entities.Menu", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentMenuID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFEC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFIC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFODM", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.POFSCC", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeCluster", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeClusterPOF", b =>
                {
                    b.HasOne("Piping.Entities.CorrosionStudy", "CorrosionStudy")
                        .WithMany()
                        .HasForeignKey("CorrosionStudyID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeMasterCOF", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PipeReport", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.PlantMaster", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.PlantMaster", "ParentPlant")
                        .WithMany()
                        .HasForeignKey("ParentPlantID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuAction", b =>
                {
                    b.HasOne("Piping.Entities.Action", "Action")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("ActionID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.Menu", "Menu")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany("RoleMenuActions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.RoleMenuQuickLink", b =>
                {
                    b.HasOne("Piping.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piping.Entities.QuickLink", "QuickLink")
                        .WithMany()
                        .HasForeignKey("QuickLinkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.TML", b =>
                {
                    b.HasOne("Piping.Entities.PipeMaster", "PipeMaster")
                        .WithMany()
                        .HasForeignKey("PipeMasterID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Piping.Entities.PipeReport", "PipeReport")
                        .WithMany()
                        .HasForeignKey("PipeReportID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.User", b =>
                {
                    b.HasOne("Piping.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Piping.Entities.UserAudit", b =>
                {
                    b.HasOne("Piping.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piping.Entities.UserRole", b =>
                {
                    b.HasOne("Piping.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Piping.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
